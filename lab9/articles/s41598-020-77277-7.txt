Hyperbolic mapping of human proximity networks
Human proximity networks are temporal networks representing the close-range proximity among humans in a physical space. They have been extensively studied in the past 15 years as they are critical for understanding the spreading of diseases and information among humans. Here we address the problem of mapping human proximity networks into hyperbolic spaces. Each snapshot of these networks is often very sparse, consisting of a small number of interacting (i.e., non-zero degree) nodes. Yet, we show that the time-aggregated representation of such systems over sufficiently large periods can be meaningfully embedded into the hyperbolic space, using methods developed for traditional (non-mobile) complex networks. We justify this compatibility theoretically and validate it experimentally. We produce hyperbolic maps of six different real systems, and show that the maps can be used to identify communities, facilitate efficient greedy routing on the temporal network, and predict future links with significant precision. Further, we show that epidemic arrival times are positively correlated with the hyperbolic distance from the infection sources in the maps. Thus, hyperbolic embedding could also provide a new perspective for understanding and predicting the behavior of epidemic spreading in human proximity systems.
Understanding the time-varying proximity patterns among humans in a physical space is crucial for better understanding the transmission of airborne diseases, the efficiency of information dissemination, social behavior, and influence1,2,3,4,5,6,7,8. To this end, human proximity networks have been captured in different environments over days, weeks or months2,4,5,9,10,11,12,13. Such time-varying networks are represented as a series of static graph snapshots. Each snapshot corresponds to an observation interval or time slot, which typically spans a few seconds to several minutes depending on the devices used to collect the data. The nodes in each snapshot are people and an edge between two nodes signifies that they had been within proximity range during the corresponding slot. At the finest resolution, each slot spans 20 s and the proximity range is 1.5 m. Such networks have been captured by the SocioPatterns collaboration14 in closed settings, such as hospitals, schools, scientific conferences and workplaces, and correspond to face-to-face interactions9,10,11,12,13. At a coarser resolution, each snapshot spans several minutes and proximity range can be up to 10 m or more. Such networks have been captured in university dormitories, residential communities and university campuses4,5,15.
Irrespective of the context, measurement period and measurement method, different human proximity networks have been shown to exhibit similar structural and dynamical properties6,16. Examples of such properties include the broad distributions of contact and intercontact durations1,2,3,16, and the repeated formation of groups that consist of the same people17,18. Interestingly, these and other properties of human proximity systems can be well reproduced by simple models of mobile interacting agents18,19. Specifically, in the recently developed force-directed motion model18 similarities among agents act as forces that direct the agents’ motion toward other agents in the physical space and determine the duration of their interactions. The probability that two nodes are connected in a snapshot generated by the model resembles the connection probability in the popular \({\mathbb {S}}^1\) model of traditional (non-mobile) complex networks, which is equivalent to random hyperbolic graphs20,21,22. Based on this observation, the dynamic-\({\mathbb {S}}^1\) model has been recently suggested as a minimal latent-space model for human proximity networks22. The model forgoes the motion component and assumes that each network snapshot is a realization of the \({\mathbb {S}}^1\) model. The dynamic-\({\mathbb {S}}^1\) reproduces many of the observed characteristics of human proximity networks, while being mathematically tractable. Several of the model’s properties have been proven in Ref.22.
Our approach to map human proximity networks into hyperbolic spaces is founded on the dynamic-\({\mathbb {S}}^1\) model. Specifically, given that the dynamic-\({\mathbb {S}}^1\) can generate synthetic temporal networks that resemble human proximity networks across a wide range of structural and dynamical characteristics, can we reverse the synthesis and map (embed) human proximity networks into the hyperbolic space, in a way congruent with the model? Would the results of such mapping be meaningful? And could the obtained maps facilitate applications, such as community detection, routing on the temporal network, prediction of future links, and prediction of epidemic arrival times?
Here we provide the affirmative answers to these questions. Our approach is based on embedding the time-aggregated network of human proximity systems over an adequately large observation period, using methods developed for traditional complex networks that are based on the \({\mathbb {S}}^1\) model23. In the time-aggregated network, two nodes are connected if they are connected in at least one network snapshot during the observation period. We justify this approach theoretically by showing that the connection probability in the time-aggregated network in the dynamic-\({\mathbb {S}}^1\) model resembles the connection probability in the \({\mathbb {S}}^1\) model, and explicitly validate it in synthetic networks. Following this approach, we produce hyperbolic maps of six different real systems, and show that the obtained maps are meaningful: they can identify actual node communities, they can facilitate efficient greedy routing on the temporal network, and they can predict future links with significant precision. Further, we show that epidemic arrival times in the temporal network are positively correlated with the hyperbolic distance from the infection sources in the maps.
We consider the following face-to-face interaction networks from SocioPatterns14. (i) A hospital ward in Lyon11, which corresponds to interactions involving patients and healthcare workers during five observation days. (ii) A primary school in Lyon10, which corresponds to interactions involving children and teachers of ten different classes during two days. (iii) A scientific conference in Turin9, which corresponds to interactions among conference attendees during two and a half days. (iv) A high school in Marseilles12, which corresponds to interactions among students of nine different classes during five days. And (v) an office building in Saint Maurice24, which corresponds to interactions among employees of 12 different departments during ten days. Each snapshot of these networks corresponds to an observation interval (time slot) of 20 s, while proximity was recorded if participants were within 1.5 m in front of each other.
We also consider the Friends & Family Bluetooth-based proximity network5. This network corresponds to the proximities among residents of a community adjacent to a major research university in the US during several observation months. We consider the data recorded in March 2011. Each snapshot corresponds to an observation interval of 5 min, while proximity was recorded if participants were within a radius of 10 m from each other. Thus proximity in this network does not imply face-to-face interaction. Table 1 gives an overview of the data.
We first provide an overview of the \({\mathbb {S}}^1\) and dynamic-\({\mathbb {S}}^1\) models. In the next section we show that the connection probability in the time-aggregated network in the latter resembles the connection probability in the former. Based on this equivalence, we then map the time-aggregated networks of the considered real data to the hyperbolic space using a recently developed method that is based on the \({\mathbb {S}}^1\) model.
The \({\mathbb {S}}^1\) model20,21 can generate synthetic network snapshots that possess many of the common structural properties of real networks, including heterogeneous or homogeneous degree distributions, strong clustering, and the small-world property. In the model, each node has latent (or hidden) variables \(\kappa , \theta\). The latent variable \(\kappa\) is proportional to the node’s expected degree in the resulting network. The latent variable \(\theta\) is the angular similarity coordinate of the node on a circle of radius \(R=N/2\pi\), where N is the total number of nodes. To construct a network with the model that has size N, average node degree \(\bar{k}\), and temperature \(T \in (0,1)\), we perform the following steps. First, for each node \(i=1, 2, \ldots , N\), we sample its angular coordinate \(\theta _i\) uniformly at random from \([0, 2\pi ]\), and its degree variable \(\kappa _i\) from a probability density function \(\rho (\kappa )\). Then, we connect every pair of nodes i, j with the Fermi-Dirac connection probability
In the last expression, \(\chi _{ij}\) is the effective distance between nodes i and j,
where \(\Delta \theta _{ij}=\pi - | \pi -|\theta _i - \theta _j||\) is the similarity distance between nodes i and j. Parameter \(\mu\) in (2) is derived from the condition that the expected degree in the network is indeed \(\bar{k}\), yielding
where \(\bar{\kappa }=\int \kappa \rho (\kappa )d\kappa\).
The degree distribution P(k) in the resulting network has a similar functional form as \(\rho (\kappa )\). Thus, the model can generate networks with any degree distribution depending on \(\rho (\kappa )\). For instance, a power law degree distribution with exponent \(\gamma > 2\) is obtained if \(\rho (\kappa ) \propto \kappa ^{-\gamma }\), while a Poisson degree distribution with mean \(\bar{k}\) is obtained if \(\rho (\kappa )=\delta (\kappa -\bar{k})\), where \(\delta (x)\) is the Dirac delta function20,25. Smaller values of the temperature T favor connections at smaller effective distances and increase the average clustering in the network21. The \({\mathbb {S}}^1\) model is equivalent to random hyperbolic graphs, i.e., to the hyperbolic \({\mathbb {H}}^2\) model21, after transforming the degree variables \(\kappa _i\) to radial coordinates \(r_i\) via
where \(\kappa _0\) is the smallest \(\kappa _i\) and \(\hat{R}=2\ln {[N/(\pi \mu \kappa _0^2)]}\) is the radius of the hyperbolic disk where all nodes reside. After this change of variables, the effective distance in (2) becomes \(\chi _{ij}=e^{\frac{1}{2}(x_{ij}-\hat{R})}\), where \(x_{ij} =r_i+r_j+2\ln {(\Delta \theta _{ij}/2)}\) is approximately the hyperbolic distance between nodes i and j21. Therefore, we can refer to the degree variables \(\kappa _i\) as “coordinates” and use terms effective distance and hyperbolic distance interchangeably.
Given the ability of the \({\mathbb {S}}^1/{\mathbb {H}}^2\) model to construct synthetic networks that resemble real networks, several methods have been developed to map real networks into the hyperbolic plane, i.e., to infer the nodes’ latent coordinates r (or \(\kappa\)) and \(\theta\), according to the model23,26,27,28,29,30. The hyperbolic maps produced by these methods have been shown to be meaningful, and have been efficiently used in applications such as community detection, greedy routing and link prediction26,27,28,29,30,31,32,33,34,35. Model-free mapping methods have also been developed36. Further, on a related note, there is a large body of work on embedding both static and temporal networks into Euclidean spaces, e.g., see Refs.37,38,39, and references therein. However, no prior work has considered embedding temporal networks into hyperbolic spaces, which provide a more accurate reflection of the geometry of real networks31.
The dynamic-\({\mathbb {S}}^1\) model is based on the \({\mathbb {S}}^1\) model and has been shown to reproduce many of the observed structural and dynamical properties of human proximity networks22. The dynamic-\({\mathbb {S}}^{1}\) models a sequence of network snapshots, \(G_t\), \(t=1,\ldots , \tau\). Each snapshot is a realization of the \({\mathbb {S}}^{1}\) model. Therefore, there are N nodes that are assigned latent coordinates \(\kappa , \theta\) as in the \({\mathbb {S}}^{1}\) model, which remain fixed. The temperature \(T \in (0,1)\) is also fixed, while each snapshot \(G_t\) is allowed to have a different average degree \(\bar{k}_t, t=1, \ldots , \tau\). The snapshots are generated according to the following simple rules: 
at each time step \(t=1, \ldots , \tau\), snapshot \(G_t\) starts with N disconnected nodes, while \(\bar{k}\) in (3) is set equal to \(\bar{k}_t\);
each pair of nodes i, j connects with probability given by (1);
at time \(t+1\), all the edges in snapshot \(G_t\) are deleted and the process starts over again to generate snapshot \(G_{t+1}\).
As shown in Ref.22, temperature T plays a central role in network dynamics in the model, dictating the distributions of contact and intercontact durations, the time-aggregated node degrees, and the formation of unique and recurrent components. Specifically, the contact and intercontact distributions are power laws with exponents \(2+T\) and \(2-T\), respectively. These exponents lie within the ranges observed in real systems22. Further, larger values of T increase the connection probability at larger distances, which increases the time-aggregated node degrees. For the same reason, larger values of T increase the number of unique components formed, while decreasing the number of recurrent components. See Ref.22 for further details.
Assuming that a sequence of network snapshots \(G_t\), \(t=1,\ldots , \tau\), has been generated by the dynamic-\({\mathbb {S}}^1\) model, we show below that we can accurately infer the nodes’ latent coordinates \(\kappa , \theta\) from the time-aggregated network, using existing methods that are based on the \({\mathbb {S}}^1\) model. This is justified by the fact that the connection probability in the time-aggregated network of the dynamic-\({\mathbb {S}}^1\) resembles the connection probability in the \({\mathbb {S}}^1\). Indeed, in the time-aggregated network two nodes are connected if they are connected in at least one of the snapshots. Assuming for simplicity that each snapshot has the same average degree \(\bar{k}_t=\bar{k}\), the connection probability in the time-aggregated network of the dynamic-\({\mathbb {S}}^1\), is
where \(p(\chi _{ij})\) is given by (1). Further, as shown in Ref.22, the expected degree of a node in the time-aggregated network, \(\tilde{\kappa }\), is related to the node’s latent degree \(\kappa\), via
where \(\alpha =\tau ^T/\Gamma (1+T)\) for \(\tau \gg 1\), and \(\Gamma\) is the gamma function. Equation  (6) is derived in the thermodynamic limit (\(N \rightarrow \infty\)), where there are no cutoffs imposed to node degrees by the network size. We can therefore rewrite (5) as
where
is the effective distance between nodes i and j in the time-aggregated network, while \(\tilde{\mu }=\mu /\alpha\). The exponential approximation in (8) holds for sufficiently large \(\tau\). We also note that since \(T \in (0,1)\), \(0.88< \Gamma (1+T) < 1\). At large distances, \(\tilde{\chi }_{ij} \gg \Gamma (1+T)\), we can use the approximation \(e^{-x} \approx 1-x\) in (8), to write
where p(x) is given by (1), while \(C=\Gamma {(1+T)}^{1/T}\), \(0.56< C < 1\). At small distances, \(\tilde{\chi }_{ij} \ll \Gamma (1+T)\), the exponential in (8) is much smaller than one, and we can write \(P(\tilde{\chi }_{ij}) \approx 1 \approx p(\tilde{\chi }_{ij})\). In other words, at both small and large effective distances \(\tilde{\chi }_{ij}\), the connection probability in the time-aggregated network resembles the Fermi-Dirac connection probability in the \({\mathbb {S}}^1\) model. Fig. 1 illustrates this effect in the time-aggregated networks of synthetic counterparts of real systems, whose snapshots can also have different average degrees \(\bar{k}_t, t=1, \ldots , \tau\) (see “Methods”).
Given this equivalence, in Fig. 2 we apply Mercator, a recently developed embedding method based on the \({\mathbb {S}}^1\) model23, to the time-aggregated network of the synthetic counterparts of the hospital and primary school. Mercator infers the nodes’ coordinates \((\tilde{\kappa }, \theta )\) from the time-aggregated network (see “Methods”), and from \(\tilde{\kappa }\) we estimate \(\kappa\) using (6). We also modified Mercator to use the connection probability in (7) instead of the connection probability in (1) (see Supplementary Information, Sect. VI). Fig. 2 shows that the two versions of Mercator perform similarly, inferring the nodes’ latent coordinates remarkably well. Similar results hold for the synthetic counterparts of the rest of the real systems (Supplementary Information, Sect. II). In the rest of the paper, we use the original version of Mercator as its implementation is simpler and does not require knowledge of parameter \(\tau\).
Connection probability in the time-aggregated network versus Fermi-Dirac connection probability. The results correspond to the synthetic counterparts of the hospital, high school and Friends & Family, constructed using the dynamic-\({\mathbb {S}}^1\) model as described in “Methods”. The blue circles show the empirical connection probabilities. The solid red and dashed black lines correspond to (1) and (7), respectively. The values of parameters T and \(\tau\) in each case are as shown in Table 1, while \(\alpha =\tau ^T/\Gamma (1+T)\). Similar results hold for the counterparts of the rest of the real systems (see Supplementary Information, Sect. I).
Inference of latent coordinates \((\kappa , \theta )\) with the original and modified versions of Mercator. The top row corresponds to a synthetic counterpart of the hospital, while the bottom row to a synthetic counterpart of the primary school. Both versions of Mercator are applied to the corresponding time-aggregated network formed over the full duration \(\tau\) in Table 1. (a,d) Inferred versus real \(\theta\). (b,e) Inferred versus real \(\kappa\). For each node, \(\kappa _{\text{inferred}}\) is estimated as \(\kappa _{\text{inferred}}=\tilde{\kappa }/\alpha\), where \(\tilde{\kappa }\) is the node’s inferred latent degree in the time-aggregated network, while \(\alpha =\tau ^T/\Gamma (1+T)\), with \(\tau\) as in Table 1 and T as inferred by each version of Mercator. (c,f) Connection probability as a function of the effective distance \(\tilde{\chi }\) in the time-aggregated network computed using the inferred coordinates \((\tilde{\kappa }, \theta )\). The solid grey and dashed black lines correspond to (1) with temperature T as inferred by each version of Mercator. For the two networks, the original version estimates \(T=0.57\), the modified version estimates \(T=0.78\) and 0.77, while the actual values are \(T=0.84\) and 0.72. In general, the modified version estimates values of T closer to the actual values. However, both versions of Mercator perform remarkably well at estimating the nodes’ latent coordinates (\(\kappa , \theta\)). We note that due to rotational symmetry of the model, the inferred angles can be globally shifted compared to the real angles by any value in \([0, 2\pi ]\).
As the aggregation interval \(\tau\) increases, the time-aggregated network becomes denser, eventually turning into a fully connected network. This can be seen in (5), where irrespective of network size, at \(\tau \rightarrow \infty\), \(P(\chi _{ij}) \rightarrow 1, \forall i, j\). Further, at \(\tau \rightarrow \infty\), \(\alpha \rightarrow \infty\), and by (9) \(\tilde{\chi }_{ij} \rightarrow 0, \forall i, j\). Clearly, no meaningful inference can be made in a fully connected network as all nodes “look the same”. Thus for an accurate inference of the nodes’ coordinates the interval \(\tau\) has to be sufficiently small such that the corresponding time-aggregated network is not too dense. On the other hand, for intervals \(\tau\) that are not sufficiently large there may not be enough data to allow accurate inference, as network snapshots are often very sparse in human proximity systems, consisting of only a fraction of nodes (Table 1). This effect is illustrated in Fig. 3, where we quantify the difference between real and inferred coordinates as a function of \(\tau\) in a synthetic counterpart of the primary school. We see in Fig. 3 that there is a wide range of adequately large \(\tau\) values, e.g., \(500< \tau < 10000\), where the accuracy of inference for both \(\kappa\) and \(\theta\) is simultaneously high, while as \(\tau\) becomes too large or too small accuracy deteriorates. Similar results hold for the counterparts of the rest of the considered real systems (Supplementary Information, Sect. VII). The exact range of \(\tau\) values where inference accuracy is high depends on the system’s parameters, e.g., sparser networks (lower average snapshot degree) allow aggregation over longer intervals, as it takes longer for the time-aggregated network to become too dense. Further, our results with the synthetic counterparts suggest that daily aggregation intervals should be sufficient for accurate inference in most cases. Indeed, in this work we embed the time-aggregated networks of the considered real systems formed over the full observation durations \(\tau\) in Table 1, as well as corresponding time-aggregated networks formed over individual observation days, obtaining in both cases meaningful results.
Inference accuracy vs. aggregation interval. The results correspond to a synthetic counterpart of the primary school constructed using the dynamic-\({\mathbb {S}}^1\) model. (a) Average difference between the inferred and real latent degrees as a function of the aggregation interval \(\tau\), \(D_\kappa (\tau ) =\sum _{i=1}^{N}| \kappa _{\text{inferred}}^i -\kappa _{\text{real}}^i|/N\), where \(\kappa _{\text{inferred}}^i\) (\(\kappa _{\text{real}}^i\)) is the inferred (real) latent degree of node i. (b) Same as in (a) but for the average difference between the inferred and real angular coordinates, \(D_\theta (\tau )=\sum _{i=1}^{N}|\theta _{\text{inferred}}^i-\theta _{\text{real}}^i|/N\). Before computing \(D_\theta (\tau )\), the inferred angles are globally shifted such that the sum of the squared distances between real and inferred angles is minimized (to this end, we apply a Procrustean rotation40, see Supplementary Information, Sect. VII for details). (c) Density of the time-aggregated network as a function of \(\tau\), \(d(\tau )=2 L/[N(N-1)]\), where L is the number of links in the network. The vertical dashed lines indicate the interval \(500 \le \tau \le 10000\). In this interval, \(D_\kappa (\tau ) < 0.2\), \(D_\theta (\tau ) < 0.2\), and \(0.06< d(\tau ) < 0.33.\)
In Fig. 4 we apply Mercator to the time-aggregated network of the real networks in Table 1 and visualize the obtained hyperbolic maps and the corresponding connection probabilities. We see that the embeddings are meaningful, as we can identify in them actual node communities that correspond to groups of nodes located close to each other in the angular similarity space. These communities reflect the organization of students and teachers into classes (Fig. 4b,c), employees into departments (Fig. 4d), while no communities can be identified in the hospital (Fig. 4a). In all cases, we see a good match between empirical and theoretical connection probabilities (Fig. 4e–h). Next, we turn our attention to greedy routing.
Hyperbolic embeddings of human proximity networks. (a-d) Hyperbolic maps of the time-aggregated networks of the hospital, primary school, high school and office building. In each case we consider the time-aggregated network formed over the full observation duration \(\tau\) shown in Table 1. The nodes are positioned according to their inferred hyperbolic coordinates (\(r, \theta\)) in the time-aggregated network [the radial coordinates r are computed using (4)]. The nodes are colored according to group membership information available in the metadata of each network. In the hospital, the nodes are administrative staff (Admin), medical doctors (Med), nurses and nurses’ aides (Paramed), and patients (Patient). In the primary school, the nodes are teachers and students of the following classes: 1st grade (1A, 1B), 2nd grade (2A, 2B), 3rd grade (3A, 3B), 4th grade (4A, 4B), and 5th grade (5A, 5B). In the high school, the nodes are students of nine different classes with the following specializations: biology (2BIO1, 2BIO2, 2BIO3), mathematics and physics (MP, MP*1, MP*2), physics and chemistry (PC, PC*), and engineering studies (PSI*). In the office building, the nodes are employees working in different departments such as scientific direction (DISQ), chronic diseases and traumatisms (DMCT), department of health and environment (DSE), human resources (SRH), and logistics (SFLE). (e-h) Corresponding empirical connection probabilities as a function of the effective distance \(\tilde{\chi }\). The pink dashed lines correspond to (1) with temperatures T as inferred by Mercator, \(T=0.99\), 0.47, 0.40 and 0.64, respectively. The maps for the conference and Friends & Family can be found in Supplementary Information, Sect. III. Daily hyperbolic maps for each real system can be found in Supplementary Information, Sect. V.
A problem of significant interest in mobile networking is how to efficiently route data in opportunistic networks, like human proximity systems, where the mobility of nodes creates contact opportunities among nodes that can be used to connect parts of the network that are otherwise disconnected1,2,3,41. Motivated by this problem, and by the remarkable efficiency of hyperbolic greedy routing in traditional complex networks26,33,35, we investigate here if hyperbolic greedy routing can facilitate navigation in human proximity systems. To this end, we consider the following simplest greedy routing process, which performs routing on the temporal network using the coordinates inferred from the time-aggregated network.
In H2H-GR, a node’s address is its coordinates \((\tilde{\kappa }, \theta )\), and each node knows its own address, the addresses of its neighbors (nodes currently within proximity range), and the destination address written in the packet. A node holding the packet (carrier) forwards the packet to its neighbor with the smallest effective distance to the destination, but only if that distance is smaller than the distance between the carrier and the destination. Otherwise, or if the carrier currently has no neighbors, the carrier keeps the packet. Clearly, a carrier delivers the packet to the destination if the latter is its neighbor. We note that there are no routing loops in H2H-GR, i.e., no node receives the same packet twice. Indeed, consider for instance a packet from a node \(i_0\) to a node \(i_n\), which has followed the path \(\{i_0, i_1, i_2, \ldots , i_{n-1}, i_n\}\). This means that \(\tilde{\chi }_{i_0 i_n}>\tilde{\chi }_{i_1 i_n}> \tilde{\chi }_{i_2 i_n}> \ldots >\tilde{\chi }_{i_{n-1} i_n}\), where \(\tilde{\chi }_{i_k i_n}\) is the effective distance between nodes \(i_k\) and \(i_n\). A node \(i_k\) in the path never forwards the packet to a node \(i_l\) with \(l < k\), i.e., to a node that has seen the packet before, because \(\tilde{\chi }_{i_l i_n} > \tilde{\chi }_{i_k i_n}\). We also note that in the thermodynamic limit (\(N \rightarrow \infty\)), there is a non-zero probability that a packet constantly moves closer to the destination but never actually reaches it. This event could theoretically occur at \(N \rightarrow \infty\), as there could be a countably infinite number of intermediate nodes with asymptotically closer effective distances to the destination. In reality such event can never occur since the number of nodes N is bounded.
For each network in Table 1, we simulate H2H-GR in one of its observation days. We consider the following two cases: i) H2H-GR that uses the nodes’ coordinates inferred from the time-aggregated network of the considered day (current coordinates); and ii) H2H-GR that uses the nodes’ coordinates inferred from the time-aggregated network of the previous day (previous coordinates). In the time-aggregated network of a day, two nodes are connected if they are connected in at least one network snapshot in the day. We compare these two cases to a baseline random routing strategy (H2H-RR), where the carrier first determines the set of its neighbors that have never received the packet before, and then forwards the packet to one of these neighbors at random. If the destination is a neighbor the carrier forwards the packet to it. The carrier keeps the packet if it currently has no neighbors, or if all of its neighbors have received the packet before. Thus, there are no routing loops in H2H-RR either.
We evaluate the performance of the algorithms according to the following two metrics: (i) the percentage of successful paths, \(p_s\), which is the proportion of paths that reach their destinations by the end of the considered day; and (ii) the average stretch over the successful paths, \(\bar{s}\). We define the stretch as the ratio of the hop-lengths of the paths found by the algorithms to the corresponding shortest time-respecting paths42 in the network.
The results are shown in Table 2. We see that H2H-GR that uses the current coordinates significantly outperforms H2H-RR in both success ratio and stretch. The improvement can be quite significant. For instance, in the primary school the success ratio increases from 34% to 82%, while the average stretch decreases from 24.9 to 3.9. Similarly, in the hospital the success ratio increases from 38% to 80%, while the average stretch decreases from 7 to 2.2. These results show that hyperbolic greedy routing can significantly improve navigation. However, the success ratio decreases considerably if H2H-GR uses the previous coordinates. This suggests that the node coordinates change to a considerable extend from one day to the next. In Supplementary Information, Sect. V, we verify that this is indeed the case. Nevertheless, H2H-GR that uses the previous coordinates still outperforms H2H-RR with respect to success ratio, while achieving significantly lower stretch similar to the stretch with the current coordinates (Table 2).
Table 3 shows the same results for the synthetic counterparts of the real systems, where we can make qualitatively similar observations. Further, we see that H2H-GR achieves higher success ratios using the inferred coordinates in the counterparts compared to the real systems. This is not surprising as the counterparts are by construction maximally congruent with the assumed geometric model (dynamic-\({\mathbb {S}}^1\)). Also, H2H-GR that uses the previous coordinates maintains high success ratios in the counterparts. This is expected, as the coordinates in the counterparts do not change over time. Thus the coordinates inferred from the time-aggregated network of the previous day are quite similar (but not exactly the same) to the ones inferred from the time-aggregated network of the day where routing is performed (see Supplementary Information, Sect. V).
The metrics in Tables 2 and 3 are computed across all source-destination pairs. In Figs. 5 and 6 we also compute these metrics as a function of the effective distance between the source-destination pairs. We see that H2H-GR that uses the current coordinates achieves high success ratios, approaching 100%, as the effective distance between the pairs decreases. As the effective distance between the pairs increases, the success ratio decreases. The average stretch for successful H2H-GR paths is always low.
H2H-RR also achieves considerably high success ratios for pairs separated by small distances (Fig. 5). This is because, even though packets in H2H-RR are forwarded to neighbors at random, the neighbors are not random nodes but nodes closer to the carriers in the hyperbolic space. Thus, packets between pairs separated by smaller distances have higher chances of finding their destinations. However, the stretch of successful paths in H2H-RR is quite high (Fig. 6). Further, we see that in real networks the success ratio of H2H-GR that uses the previous coordinates resembles in most cases the one of H2H-RR (Fig. 5a–c and Supplementary Fig. S4). However, the stretch in H2H-GR is always significantly lower than in H2H-RR (Figs. 6a−c and Supplementary Fig. S5).
Success ratio \(p_s\) of H2H-GR and H2H-RR as a function of the effective distance \(\tilde{\chi }\) between source-destination pairs. The top row corresponds to the results of the hospital, primary school and conference in Table 2, while the bottom row to the results of their synthetic counterparts in Table 3. The success ratio for H2H-RR and H2H-GR that uses the previous coordinates is shown as a function of the effective distance between the pairs in the previous day. Similar results hold for the other real networks and their synthetic counterparts (Supplementary Information, Sect. IV).
Same as in Fig. 5 but for the average stretch \(\bar{s}\). Similar results hold for the other real networks and their synthetic counterparts (Supplementary Information, Sect. IV).
Taken altogether, these results show that hyperbolic greedy routing can facilitate efficient navigation in human proximity networks. The success ratio for pairs separated by large effective distances can be low (Fig. 5). However, it is possible that more sophisticated algorithms than the one considered here could improve the success ratio for such pairs without significantly sacrificing stretch. Further, using coordinates from past embeddings decreases the success ratio. Even though the average stretch remains low, this observation suggests that the evolution of the nodes’ coordinates should also be taken into account. Such investigations are beyond the scope of this paper. Finally, we note that in Supplementary Information, Sect. IV, we consider H2H-GR that uses only the angular similarity distances among the nodes, and find that it performs worse than H2H-GR that uses the effective distances. This means that in addition to node similarities, node expected degrees (or popularities31) also matter in H2H-GR, even though the distribution of node degrees in human proximity systems is quite homogeneous22.
In this section, we turn our attention to link prediction. We want to see how well we can predict if two nodes are connected in the time-aggregated network of a day, if we know the effective distances among the nodes in the previous day. To this end, for each pair of nodes i, j in the previous day that is also present in the day of interest, we assign a score \(s_{ij}=1/\tilde{\chi }_{ij}\), where \(\tilde{\chi }_{ij}\) is the inferred effective distance between i and j in the time-aggregated network of the previous day. The higher the \(s_{ij}\), the higher is the likelihood that i and j are connected in the day of interest. We call this approach geometric. To quantify the quality of link prediction, we use two standard metrics: (i) the Area Under the Receiver Operating Characteristic curve (AUROC); and (ii) the Area Under the Precision-Recall curve (AUPR)43. These metrics are described below.
The AUROC represents the probability that a randomly selected connected pair of nodes is given a higher score than a randomly selected disconnected pair of nodes in the day of interest. The degree to which the AUROC exceeds 0.5 indicates how much better the method performs than pure chance. As the name suggests, the AUROC is equal to the total area under the Receiver Operating Characteristic (ROC) curve. To compute the ROC curve, we order the pairs of nodes in the descending order of their scores, from the largest \(s_{ij}\) to the smallest \(s_{ij}\), and consider each score to be a threshold. Then, for each threshold we calculate the fraction of connected pairs that are above the threshold (i.e., the True Positive Rate TPR) and the fraction of disconnected pairs that are above the threshold (i.e., the False Positive Rate FPR). Each point on the ROC curve gives the TPR and FPR for the corresponding threshold. When representing the TPR in front of the FPR, a totally random guess would result in a straight line along the diagonal \(y = x\), while the degree by which the ROC curve lies above the diagonal indicates how much better the algorithm performs than pure chance. \(\text {AUROC} = 1\) means a perfect classification (ordering) of the pairs, where the connected pairs are placed in the top of the ordered list.
The AUPR represents how accurately the method can classify pairs of nodes as connected and disconnected based on their scores. It is equal to the total area under the Precision-Recall (PR) curve. To compute the PR curve, we again order the pairs of nodes in the descending order of their scores, and consider each score to be a threshold. Then, for each threshold we calculate the TPR, which is called Recall, and the Precision, which is the fraction of pairs above the threshold that are connected. Each point on the PR curve gives the Precision and Recall for the corresponding threshold. A random guess corresponds to a straight line parallel to the Recall axis at the level where Precision equals the ratio of the number of connected pairs to the total number of pairs. The higher the AUPR the better the method is, while a perfect classifier yields \(\text {AUPR}=1\).
The results for the considered real networks and their synthetic counterparts are shown in Table 4. The corresponding ROC and PR curves are shown in Fig. 7. We see that geometric link prediction significantly outperforms chance in all cases. These results constitute another validation that the embeddings are meaningful, and illustrate that they have significant predictive power. As can be seen in Table 4 and Fig. 7, link prediction is more accurate in the synthetic counterparts. This is again expected since the counterparts are by construction maximally congruent with the underlying geometric space, while the node coordinates in them do not change over time.
We also compute the same metrics as in Table 4 but for a simple heuristic, where the score \(s_{i j}\) between two nodes i and j is the number of common neighbors they have in the time-aggregated network of the previous day (CN approach). The results are shown in Table 5. Interestingly, we see that the performance of the geometric and CN approaches is quite similar in real networks, suggesting that the latter is a good heuristic for link prediction in human proximity systems. The performance of the two approaches is also positively correlated in the synthetic counterparts (Tables 4 and 5). This is expected since the smaller the effective distance between two nodes the larger is the expected number of common neighbors the nodes have. However, as can be seen in Tables 4 and 5, in the counterparts the geometric approach performs better than the CN approach. This suggests that the performance of the former could be further improved in real systems, if more accurate predictions of the node coordinates in the period of interest could be made.
ROC and PR curves for geometric link prediction in real networks and their synthetic counterparts. (a–f) show the ROC curves, while (g–l) the PR curves, corresponding to the results in Table 4. The dashed black lines correspond to link prediction based on chance; these lines in (g–l) correspond to the AUPR chance values in Table 4.
Finally, we consider epidemic spreading. Here, predicting the arrival time of an epidemic is crucial for developing better containment measures for infectious diseases44,45. In the context of the global air transportation network, Brockmann and Helbing showed that the epidemic arrival time in a country can be well predicted by the effective distance between the country and the infection source country45. The effective distance between two countries is defined as the length of the shortest weighted path connecting the two countries in the air transportation network, where the weight of a link is a decreasing function of the air traffic between the endpoints of the link45.
In a similar vein, here we show that in human proximity networks, the epidemic arrival time, i.e., the time slot at which a node becomes infected, is positively correlated with the hyperbolic distance between the node and the infected source node in the time-aggregated network. [We note that while in Ref.45 the effective distances are directly defined by observable (weighted) path lengths, the effective distances in our case are defined by the nodes’ latent coordinates that manifest themselves indirectly via the nodes’ connections and disconnections in the (unweighted) time-aggregated network.] To this end, we consider the Susceptible-Infected (SI) epidemic spreading model46. In the SI, each node can be in one of two states, susceptible (S) or infected (I). At any time slot infected nodes infect susceptible nodes with whom they are within proximity range, with probability \(\beta\). Thus, the transition of states is S\(\rightarrow\)I. To simulate the SI process on temporal networks we use the dynamic SI implementation of the Network Diffusion library47.
Figures 8 and 9 show the results for the considered real networks and their synthetic counterparts, respectively. We see that the epidemic arrival times are significantly correlated with the hyperbolic distance from the infected source node. The correlation in each case is measured in terms of Spearman’s rank correlation coefficient \(\rho\) (see “Methods”). These results indicate that hyperbolic embedding could provide a new perspective for understanding and predicting the behavior of epidemic spreading in human proximity systems. We leave further explorations for future work.
Average infection time slot as a function of the hyperbolic distance from the infected source node in real networks. In each case we consider the inferred hyperbolic distances in the time-aggregated network formed over the full observation duration. The hyperbolic distance is binned into bins of size \(\delta =1\) and the plots show the average infection time slot for nodes whose hyperbolic distance from the source node falls within each bin. The shaded area identifies the region corresponding to one standard deviation away from the average. Bins with less than 5 samples are ignored. The results are averaged over 10 simulated SI processes. Each process starts with a different infected source node selected at random, while the infection probability per time slot is \(\beta =0.05\). Each plot indicates the average Spearman rank correlation coefficient \(\rho\) between the infection time slot and the hyperbolic distance across the 10 SI processes. In these plots we consider the hyperbolic distance instead of the equivalent effective distance \(\tilde{\chi }\), as the former is more convenient for binning purposes.
Same as in Fig. 8 but for the synthetic counterparts (using inferred hyperbolic distances).
For each real network we construct its synthetic counterpart using the dynamic-\({\mathbb {S}}^{1}\) model as in Ref.22. Specifically, each counterpart has the same number of nodes N and total duration (number of time slots) \(\tau\) as the corresponding real network in Table 1, while the latent variable \(\kappa _i\) of each node \(i=1, \ldots , N\) is set equal to the node’s average degree per slot in the real network. The average degree \(\bar{k}_t\) in each snapshot \(G_t\), \(t=1, \ldots , \tau\), is set equal to the average degree in the corresponding real snapshot at slot t—Fig. 10 shows the distribution of \(\bar{k}_t\). Finally, the temperature T is set such that the resulting average time-aggregated degree, \(\tilde{\bar{k}}\), is similar to the one in the real network. Each “day” in each counterpart corresponds to the same time slots as the corresponding day in the real system. See Ref.22 for further details.
Distribution of the average snapshot degree in the considered real networks.
Mercator23 combines the Laplacian Eigenmaps (LE) approach of Ref.36 with maximum likelihood estimation (MLE) to produce fast and accurate embeddings. It can embed networks with arbitrary degree distributions. In a nutshell, Mercator takes as input the network’s adjacency matrix. It infers the nodes’ latent degrees (\(\tilde{\kappa }\)) using the nodes’ observed degrees in the network and the connection probability in the \({\mathbb {S}}^1\) model. To infer the nodes’ angular coordinates (\(\theta\)), Mercator first utilizes the LE approach adjusted to the \({\mathbb {S}}^1\) model, in order to determine initial angular coordinates for the nodes. These initial angular coordinates are then refined using MLE, which adjusts the angular coordinates by maximizing the probability that the given network is produced by the \({\mathbb {S}}^1\) model. Mercator also estimates the value of the temperature parameter T. The code implementing Mercator is made publicly available by the authors of23 at https://github.com/networkgeometry/mercator. We have used the code as is without any modifications.
As mentioned in the main text, we also considered a modified version of Mercator that replaces the connection probability of the \({\mathbb {S}}^1\) model in (1) with the connection probability in (7). This modification requires several changes to the original Mercator implementation that we describe in Supplementary Information, Sect. VI.
To quantify the correlation between the time slot at which a node becomes infected and its hyperbolic distance from the infected source node, we use Spearman’s rank correlation coefficient \(\rho\)49. Formally, given n values \(X_i\), \(Y_i\), the values are converted to ranks \(rg_{X_i}\), \(rg_{Y_i}\), and Spearman’s \(\rho\) is computed as
where \(\text {cov}(rg_X, rg_Y)\) is the covariance of the rank variables, while \(\sigma _{rg_X}, \sigma _{rg_Y}\) are the standard deviations of the rank variables. Spearman’s \(\rho\) takes values between \(-\,1\) and 1, and assesses monotonic relationships. \(\rho =1\) (\(\rho =-\,1\)) occurs when there is a perfect monotonic increasing (decreasing) relationship between variables X and Y, while \(\rho =0\) indicates that there is no tendency for Y to either increase or decrease when X increases.
