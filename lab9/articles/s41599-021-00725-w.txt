Applying the Rasch model to analyze the effectiveness of education reform in order to decrease computer science students’ dropout
#https://www.nature.com/articles/s41599-021-00725-w
Attrition is an important issue in higher education, especially in the field of computer science (CS). Here, we investigate to what extent an education reform affects the attrition of students by analyzing the pattern of grades of CS students’ academic achievement from 2010 to 2018 by IRT, based on Rasch-model analysis. We analyze data from 3673 undergraduate students of a large public university. In 2016 an education reform—as an intervention—was added to our BSc program: all theoretical lectures became compulsory to attend and we introduced a learning methodology course for all first-year students. According to our results, after the education reform most subjects became accomplishable, and students with lower levels of ability also tried to take exams. We succeeded in retaining 28% of our students. Analyzing students’ results could help administrators develop new programs in order to increase retention.
In the last decades, higher education institutions (HE) have been under pressure to reduce the rates of students ‘dropping out’, and develop methods that encourage students to continue their studies (Thomas and Quinn, 2003; Mayhew et al., 2016). The aim of our research is to analyze students’ academic success and to find subjects related characteristics of retention in the field of computer science (CS).
At a large public university in Europe (over 30,000 students) the overall dropout rate is 30%, and the worst among the departments is in Informatics, where the average rate of attrition was 60% between 2010 and 2016. The attrition rates are similar in other countries in Europe, as well (Borzovs et al., 2015; Zwedin, 2014), but it seems to be a worldwide issue, which can present a significant problem in the job market. Today more than 800,000 computer scientists would be needed (Europa.eu, 2015), which makes this problem not only an educational but an economic one, as well. Most students in the first year of college fail the Introductory Mathematics course more often than any other courses. After the first semester, on average 30% of students leave the field of CS, and this number increases to 60% by the end of the first year (Borzovs et al., 2015; Ohland et al., 2008). Therefore, it is worthwhile to analyze the curriculum of CS in order to find solutions for dropout.
According to the Association for Computing Machinery an ideal curriculum for computing contains guiding disciplines for CS education (ACM-IEEE, 2017). Students should be able to “analyze complex, real-world problems to identify and define computing requirements and apply computational approaches to the problem-solving process”. A general CS program is based on various areas of mathematics, as well. For instance, discrete mathematics is essential for higher levels of CS. Every CS curriculum contains mathematics for at least 12 compulsory credits. However, at the departments of Informatics of a large public university in Europe half of the students (51%) had problems with subjects related to mathematics. In the following the description of some theories behind the phenomenon of dropping-out clarifies the reasons and research directions in order to retain students.
Tinto (1975) introduced an interactional theory of student persistence in academic life. This theory emphasized the importance of the students’ personal characteristics, traits, experiences, and commitment. Furthermore, Tinto (2012) highlighted the interactions between the student and the institution regarding how integrated (“fitted” academically and socially) the student is. Pascarella and Terenzini (1983) also associated the importance of social and academic integration, such as peer relationships and faculty member relationships with persistence. Interactional theories suggest that students should be connected to one another and their institutions. Braxton and Hirschy (2004) emphasized the need for community on campus as a help of social integration to develop relationship between peer to peer. Terenzini and Reason (2005) and Reason (2009) suggest that the student’s pre-college characteristics and experiences interact with internal structures, policies, and practices of the university. It will not turn out whether the student persists and continues their studies or not until the end of the interactional circle (Terenzini and Reason, 2005; Reason, 2009).
However, according to Braxton and Hirschy (2004), there is a missing evidence that these characteristics and motivations can provide a successful predictive model of student engagement. It remains a question why some students successfully “fit” while others do not at the university, although they often have similar academic backgrounds and socioeconomic demographics. Because of the remaining questions and the lack of explanation it is considerable to analyze the reasons behind CS dropout because this field has a large number of students dropping out.
In line with the growing attention paid to dropout, models explaining CS students’ dropout have been presented in the literature. Unfortunately, most students drop out already in the first year of their studies. Every year many students around the world enter higher education enrolling for CS but after 3 years only a few will receive a degree. It means that we have to understand which characteristics of the subjects should be taken into account in order to avoid dropout. While one direction of the attrition analyses of dropout is investigating the core subjects which students tend to fail, the other direction is conducting research into students’ psychological characteristics. In the following section some of the research will be discussed in detail.
During the first academic year, CS students have basic subjects, such as mathematics and programming, which provide important basic knowledge for their further academic studies. Most studies claim (Divjak et al., 2010) that most of the students fail in mathematics courses; however, programming courses also cause problems for students (e.g. Bennedsen and Caspersen, 2007). According to Watson and Li (2014) the success rate of passing in an introductory programming course is 67.7% based on the systematic literature review. Baker et al. (2009) claim that difficulties in the introductory courses can cause unwillingness to continue studies in CS major.
According to students’ characteristics investigations, there is a hypothesis that being a successful student in engineering is dependent on being successful in math during high school. University students learn a huge amount of new information; therefore, it is a necessary skill to be able to recall most of what you have learnt (Bacon and Stewart, 2006; Rawson et al., 2013). Pearson and Miller (2012) found that the bachelor degree in engineering is highly dependent on the calculus course during high school, and the number of calculus courses taken at university. According to Pearson and Miller, one-third of the students fail to complete the degree due to inadequate knowledge in mathematics. Hopkins et al. (2016) analyzed the psychological mechanism in acquiring information among engineering students. They employed spaced versus massed retrieval practice for students to acquire the Introductory Calculus for Engineers course. A hybrid between- and within subjects design was used. Spaced retrieval practice could help in academic performance of engineering students. Among the first-year students they found a relation between mean high school GPA and student success if students had the same disciplines learned in high school. Chen (2013) mention several reasons behind STEM attrition: STEM attrition was correlated with students’ demographic characteristics, pre-college academic preparation, types of first institution enrolled, etc. It appears that STEM coursetaking in the first year, the type of math courses taken in the first year, and the level of success in STEM courses keep stronger relationships with this outcome than did other factors. Robbins et al. (2004) claim in their meta-analyses that there is a moderate relationship between retention and academic goals, academic self-efficacy, and academic-related skills (ps = 0.340, 0.359, and 0.366, respectively). Actually, academic self-efficacy and achievement motivation seem to be the best predictors for GPA (ps = 0.496 and 0.303, respectively). Giannakos et al. (2017) conducted an eight-predictor model explaining 39% of student retention. The model contained the following variables: usefulness of the degree, cognitive gains, and supportive environment. Other researchers suggest restructuring the education system; Kalmar (2013) claims that the two important pedagogical factors behind attrition rates are the lack of feedback and practice (Seymour and Hewitt, 1997).
Although the above studies dealt with a huge range of reasons of retention, further studies are needed for a deeper understanding of the phenomenon and for including it in a practical intervention program.
A wide variety of techniques have been employed to minimize student attrition at undergraduate institutions. Many interventions focus on positively affecting retention. There are many types of intervention. For instance, focusing on difficult, entry-level science courses has managed, in some cases, to increase retention by 10% (Blanc et al., 1983; Tinto, 2005); self-selected groups of students have reached similar results by decreasing attrition from 9.8% to 3.2% (Gregerman et al., 1998); other faculties have orientation sessions (Pascarella et al., 1986), which affect retention indirectly through developing social interaction among the undergraduate students and by increasing commitment to an institution. Recently Bowman et al. (2019) presented two studies that analyzed how effective a goal-setting academic advising intervention can be. The study examined engineering students who were on academic probation in order to improve their grades. The findings show that the intervention notably increased the grades of engineering students on probation who are beyond their first year of college, but it was not effective for students in their first year. It shows that this type of intervention supports academic success after the first year.
Project Success (PS) is the name of an intervention program that helps probationary students achieve academic success. The program has two main parts. The first component of the program is to give students elaborate information about study skills and campus resources. The second component of PS is to help students to improve skills necessary for studying, such as time management. The groups are small and they are required to meet every week for gaining a letter of completion. The intervention does not grant academic credits (Humphrey, 2005). Hwang et al. (2014) came to the same conclusion analyzing the experience of some college students who had experienced academic effectiveness. During the ‘education recovery program’ four main topics appeared to be vital: attitude, study strategies, external support, and coping with difficulties. These results suggest that students—by receiving external support—are better able to cope with and overcome academic difficulties. In addition to this, working at a large metropolitan public research university, Kot (2014) studied the first-year GPA of 2745 full-time freshmen and their second-year enrollment behavior. According to their results, students who used centralized counseling services had an increase in their first-term GPA, second-term GPA, and also had less probability of first-year dropout. Wlazelek and Coulter (1999) had similar results: students who had participated in counseling during their academic studies had significantly higher grade point average than students who did not receive counseling.
Mellor et al. (2015) applied a small class intervention as well and had a 10% lower attrition rate among the students taking the course. Similarly, students who completed the goal-setting intervention for 4 months showed significant improvements in academic performance compared with the control group. The goal-setting program could be an effective and quick intervention for students who are struggling with academic studies (Morisano et al., 2010). These results suggest that small-group interventions can effectively reduce attrition. Furthermore, using 25 experimental studies for meta-analysis on the effect of academic probation, student-faculty mentoring showed that mentoring had the largest positive influence on student outcomes (Sneyers and De Witte, 2018).
According to Herpen et al. (2019) participation in a pre-academic program could encourage students to make a greater effort during their studies, because students who had participated in the program had better first-year cumulative GPA.
The analysis was performed using the IRT, based on the Rasch-model of the STATA15 software package.
Participants: All first-year students (N = 3673) are full-time students at the BSc course in CS. 2863 participants started the university before 2016; and 809 after 2016; and the average age was 19.81 years.
In the longitudinal examination between 2010 and 2015, 3671 students started the university program, 1776 students (48%) left the university, and 24% are retained students (N = 894). From the student registration system between 2016 and 2017, 809 students registered and 168 (20%) left the university, while the others’ degrees are still in progress (Table 1).
Instead of introducing the whole subject network, we present typical subjects that were analyzed using the IRT, based on the Rasch-model. Below we will discuss the subjects of Discrete Mathematics, Law and Management Theory, and Basic CS (Mathematics, General, and Functional Programming). These subjects enables us to sufficiently interpret the typical phenomena that may occur in such an analysis. The whole analysation of the subjects can be found in Appendix A.
The period before 2015 and after 2016 are treated separately in the table, as at the end of 2015 the first step of the education reform took place, when all the lectures became obligatory and the Learning method course was introduced to all first-year students so it had an impact on academic achievement. We wondered if it manifested itself in some way in the difficulty of completing the subjects and in their ability to differentiate.
Let us examine Table 2 more closely. As a first step, let us examine the slope indices of the given objects in different years, whether they change from one year to another.
We applied two parametric procedures: each subject has a difficulty index and a slope.
The students’ ability value (a) moves on the same scale as the object difficulty value (d). Connected to the slope (s). This means
That is the ability of a student’s performance in a given subject at a given ability value can be calculated with the above probability. Let us examine how it can be interpreted. It should be noted that the examined phenomenon cannot have a negative slope (typically not 0), because a slope of 0 means that there is 1/2 of a probability (regardless of ability) that a student passes a given exam, so in simple terms, it is essentially a coin toss that decides what grade they get. Fortunately, there is no such thing, so we can assume that all slopes are positive.
If the student’s ability is higher than the difficulty of the subject, then the exponent of “e” is always negative, so the higher the ability, the lower the denominator of the fraction, thus the greater the probability of earning a given grade.
An increase in slope refers to the fast change of the probability of how steeply the subject discriminates, i.e. how quickly the probability of success decreases/increases from a given difficulty/ability.
It is thus clear that it is the two parameters of the subject and the ability of the student that determine the probability of success in a subject. The default values are 0–0—and the values for affordable subjects/weak ability levels are typically −2, and for heavy subjects/serious ability levels are above 2.
Typically, if the student’s ability is exactly equal to the difficulty of the subject, the exponent is 0, which means that it is just 1/2 of a probability of reaching that particular grade.
While if the student’s ability falls short of the difficulty, the denominator of the fraction will increase, so the probability that the student will be able to pass the exam will decrease—he/she will earn a good grade (Fig. 1).
Difficulty levels of the subjects.
In discrete mathematics (both in lecture/theory or practice), we see a slope of high value above 3 (sometimes 4) (before and after 2016). This means that the subject had strong differentiating abilities both before and after the subject reform.
If we also observe the difficulty parameters, two things become visible:
On the one hand, the subject became less difficult, as the lower level of ability before 2015 and after 2016 or later was sufficient to earn a higher grade (mainly true for the practice course as well). Regarding performance, our attention can focus on the difficulty of level 1, which moved downwards (2015 and before: −0.599, standard error: 0.03, and after 2016: −0.71, standard error: 0.05—the larger error is due to the fact that the measurement point was obviously smaller for this period, and the number of students was smaller due to the shorter elapsed time).
This means that the students tried taking exams more bravely, so students with lower ability levels also tried passing an exam, whereas earlier, presumably this level meant that the student did not even take the exam, since one cannot think that from one year to the next, students were “disoriented” and far better able students took over universities.
On the other hand, you can also see that there is a bigger jump in the difficulty of the subject between 2 and 3 grades. This means that the difficulties are most differentiated here. It is also noticeable that the difficulties increase substantially evenly (both in practice and in lectures), except for this group—so it is actually easier to receive grades 1–2 than one of grades 3–4–5.
However, the most noteworthy thing for us is that experience has proven that level 1 has become easier after the education reform, which means that students are more willing to take the exam (and more people try it); dropouts usually begin when the students do not attempt the exam). And we can prove that the difference between the two years was in this direction.
It can be clearly seen that the slope of this subject is significantly lower than that of discrete mathematics, so the subject is to be expected to be able to distinguish between students with a higher ability group (still high enough not to “randomize” grades).
What makes this well-known subject particularly prominent in the analysis is that it has become drastically easier to receive outstanding grades following the education reform. It can clearly be seen that while the lower region (sufficient or not tried the exam at all) has not changed significantly, at the level of grades 4 and 5, (or 3 and 4) we can see a very serious, almost one-unit shift (here the standard errors are 0.05 values). It means that passing the exam has not been significantly easier or more difficult for students, but students with lower ability levels than before 2015 are now able to score better on the subject.
Also note that the slope of the subject has increased, which also seems to confirm that the subject cannot differentiate well below and above the sufficient/medium level, in this sense that student gaining grades 1–2 or students gaining grades 4–5 differ in abilities.
As for functional programming, we see a similar slope to that of Law and management, so its differential effect is less expressed (slope: 1.6–1.7); on the other hand, it exhibits similar stability to discrete mathematics.
The reason why we chose to present this subject among of the programming subjects is the typical change of the programming/computing subject: in this subject we can see that while attaining the lower region became more difficult for students (it is harder to “pass” after 2016 than before), after they reach this level, it will be easier for them to receive a better grade.
In other words, from difficulty level 1 to level 3, the subject is difficult in the sense that only the better (already positive ability level) students take the exam, and in their case an increase has been observed. The level of the achievement of the distinguished grade is also lowered. Thus the subject has a kind of centralizing effect; it has restricted the student’s achievement.
It also means that we were generally able to observe that—compared to the period before 2016 and after 2016—1. mathematics-related subjects (such as discrete mathematics) became achievable at lower levels of difficulty, and students with lower levels of ability attempted exams and did not regard not passing it as a failure; 2. programming/professional subjects (such as functional programming) became harder, more serious subjects, and retained their differentiating ability.
The most reasonable result from recent research is the effect it has had on the rate of retention. The 28% lower attrition rate among the students following the education reform suggests that interventions might help to reduce attrition. This reduced attrition—as a result of our reform—gave students the ability to continue their university education. The drop-out rate was minimized from 48% to an impressive 20%. However, we know that in CS programs we might lose these students later, as well (for example, because they start working), but it i.e. retention still has great economic and social consequences. In order to answer to the first hypothesis (i.e. to what extent will an education reform at a large public university affect the attrition of students?), it could be claimed that education reform might have a substantial part in reducing dropout.
The education reform is still in progress. Each semester we analyze the effectiveness of our education reform and we introduce different challenges in order to reduce further dropout. Annual statistical measurements throughout the program support the effort to help the reform develop along with its students. Other programs in the literature, e.g. Humphrey (2005), Kot (2014) measure high attendance rate with potential results. However, a program which involves every freshman student is not yet to be found. Our education reform involved all first-year students, and participation was obligatory in order to prevent students from dropout, so every student participated in the learning methods course. Both the research and the feedback by students are positive and encouraging.
Tinto (1975) introduced an interactional theory of student persistence in academic life. Our education reform has a developing impact on every factor that according to Tinto (2012) could be important for student retention. This theory emphasized the importance of the students’ personal characteristics, traits, experiences, and commitment. The study course develops interactions between the student and the institution and help students to become more integrated, “fitted” academically and socially. The course supports these students in their efforts to become academically successful. The small groups provide a support system and strong relationships for the students. The structure of course addresses many of the relevant academic skills affecting dropout including time management skills and effective study skills. The ongoing, reflective, and responsive nature of the course allows mentor teachers to treat students as individuals within the groups. The education reform allows us to give students positive and proven guidance about how to become successful college students. The education reform facilitates members of the university to be involved in retention and student success in a meaningful way. The investment by the institute is huge, but we can experience the results immediately by conducting longitudinal research and find new opportunities to invest in order to develop student retention by the university. All in all, the education reform appears to be a win–win program that could be used by other institutions, as well, to increase the retention of their students.
As we can see from the literature, most students drop out already in the first year of their studies. Our education reform can be one of the answer for this issue, because our program has been introduced for every freshman student, not just for students at risk. This way, with support from the mentors and developing study skills, we can prevent our students from drop-out. According to our findings we could retain 28% of our students.
According to the literature, e.g. Pearson and Miller (2012), one-third of students fail to complete a degree due to their inadequate knowledge in mathematics. Our findings suggest that interfering in the education system can have an effect on students’ retention. By answering to second hypothesis (i.e. Can we have any evidence for it regarding the subjects by analyzing the pattern of grades?), analyzing the pattern of grades could help to clarify the difference success rate of students before and after the education reform (2016) because it clearly shows that more students have passed the subjects. After the education reform the structure of passing the mathematical subjects has changed: more students try and pass the exam. Our reform has changed the attitude of students towards mathematics-oriented subjects, because the success rate of passing these exams has risen. We fully agree with Giannakos et al. (2017), who highlight the importance of supporting high-quality education in order to retain more students in CS studies. However, this phenomenon is complex and further investigations are needed to see how students’ motivation can be kept. It is worth revising the importance of mathematics in CS education and developing teaching methods based on the findings that different skills are needed to elaborate mathematical theories.
In our research we analyzed students’ achievement from a new perspective: we applied IRT, based on the Rasch-model. We found different achievement patterns before and after the education reform. One of the most mentionable results is that experience has proven that reaching passing grade has become easier after the education reform, which means that students are more willing to take the exam. It means that we could stop dropout which begins with students not attempting exams and ends with their leaving the university during the semester. In addition to this, there is another notable result: after the education reform the structure of subjects has changed, as well. Mathematics-related subjects became achievable at lower levels of difficulty, thus students with lower levels of ability also took exams. Programming or professional subjects became harder, more serious subjects, and retained their differentiating ability.
These findings underline the importance of teachers: they should provide opportunities for students to develop their skills in order to fulfill the academic requirements. Students who struggle with mathematics could be identified by a learning system and could be given the opportunity to consult with teachers. As a consequence, we saw that students were likely to postpone mathematics subjects that required more complex knowledge until a later semester. This type of procrastination can easily lead to dropout. The intervention reform could help students to stay and receive a degree in order to increase the number of computer scientists in the economy. CS education has a serious responsibility for controlling students’ attrition. The recent study has important educational implications for universities in the field of CS, namely, an education reform is worth introducing. The present research could lighten the effect of attending compulsory courses and learning methods. It seems that students with different abilities can succeed in fulfilling the academic requirements.
It is worth examining the subjects of the various courses, because—although there are grades—there is some kind of expected knowledge, competence that the subject should measure (and the student should develop it or at least reach the expected level by the end of the course). It is also important to see that in order to obtain sufficient knowledge (or to achieve better grades), a subject really needs differentiation, better and better abilities—or does the subject differentiate students in different ways?
To find out whether this kind of competence actually exists and whether the subjects measure this kind of competence, we applied IRT, based on Rasch-model analysis to examine the mathematical and programming subjects included in CS education (Rasch, 1960). In our higher education system every subject is graded on a five-point scale, where 1 means fail, and grades from 2 to 5 mean pass, with 5 being the best grade. In the analyses the final grades were included in each subject.
Rasch models are a special case IRT models. The essence of Rasch modeling is to bring the difficulty of the subjects and the ability of the students to the same scale. A subject with a given difficulty can be solved by a student with the same ability level with a given probability. Obviously, all subjects that are less difficult are more likely to be correctly solved than more difficult subjects.
Let us look at an example of this: if you have a right triangle that gives both of its catches and the student has to calculate the overall, then he or she must be partly familiar with the Pythagorean theorem and partly able to apply it—so square, add, results from the root. This is not a very difficult task. Students with a given difficulty are 60–70% more likely to solve the problem. A more difficult task is to ask them to determine the length of the third side on the basis of two sides and the angle enclosed by an arbitrary triangle (Cosinus theorem, generalization of the Pythagorean theorem), but it is an easier task to specify the total length of the two sides specified, or the circumference of the triangle. The former task can be solved by people with lower abilities, while the latter is more likely to be solved by students at the given level; and in this light the difficulty of the task will be higher (i.e. more difficult) and that of the latter will be lower (i.e. having a lower difficulty value).
In the model, we use a second parameter besides the difficulty: this is the “slope” of the subject. The steeper the slope of the subject is, the better it can differentiate students, so, it measures well and strongly around a given ability level.
Here, too, is an example based on the above. In applying the Pythagorean theorem, it is generally true that by the time students get to this point, they will use a calculator to square and root. In the light of this, the slope of this task will be higher, because if one knows the item, he or she will most likely solve the problem—so at a higher level of ability, the task will no longer be able to distinguish between students. Conversely, at a lower level—if you do not know the item, you will not be expected to guess the Pythagoras theorem, so you will not be able to solve the problem. In this sense, at lower levels, this task will not measure well, either, as under that level, no one is expected to solve it.
It is clear, therefore, that when examining items, we will first look at these two parameters: on the one hand, we find how difficult the subjects are, and on the other hand, how well they are able to differentiate (higher for “cut” and lower for “randomizing”).
