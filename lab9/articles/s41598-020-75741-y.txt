Simplification of networks by conserving path diversity and minimisation of the search information
Alternative paths in a network play an important role in its functionality as they can maintain the information flow under node/link failures. In this paper we explore the navigation of a network taking into account the alternative paths and in particular how can we describe this navigation in a concise way. Our approach is to simplify the network by aggregating into groups the nodes that do not contribute to alternative paths. We refer to these groups as super-nodes, and describe the post-aggregation network with super-nodes as the skeleton network. We present a method to describe with the least amount of information the paths in the super-nodes and skeleton network. Applying our method to several real networks we observed that there is scaling behaviour between the information required to describe all the paths in a network and the minimal information to describe the paths of its skeleton. We show how from this scaling we can evaluate the information of the paths for large networks with less computational cost.
How difficult is to navigate a city? How much information do we need to know to be able to navigate from one street to any other street? These and similar questions were studied by Rosvall et al.1,2,3 and to answer them they introduce a new information measure, the search information. In its simplest form, the search information relates to how many yes/no decisions a traveller has to take when navigating to reach to its destination. This measure has been used to study different aspect of navigability of transport networks4,5,6,7, but its uses are more general, for example, recently it has been used to study task processing in the structure of topology network8, brain connectome9,10,11,12, linguistic prediction13, stability problem of wireless networks14,15, and human behavior prediction of social networks16.



Our aim here is to consider a network not from the view of the traveller but from the view of the network operator. How do we describe the navigability of a network in a concise way? One of our concerns is that a network may contain many alternative paths between two nodes and we would like to capture the existence of these alternative paths. The reason to base our description on path diversity is because it plays an important role in the network robustness as alternative paths can maintain the information flow if one path is not available.
In part we are looking to partition the network into groups, where a group is the set of nodes where there is a unique path between the members of the group but different alternative paths between members of different groups. The procedure to simplify a network to a smaller network where both networks have the same number of alternative paths is based on link-contraction, that is the agglomeration of the nodes that do not contribute to alternative paths into a super-node with the restriction that the agglomeration should not introduce multilinks (Fig. 1a). We called this link-contraction a tree-contraction, as the subnetworks contained in the super-nodes are trees17,18, and the network which describes the connectivity of the super-nodes, the skeleton network17.
(a) Agglomeration of a set of nodes (bottom) from the original network (top). (a,b) Two skeleton networks (bottom) with different connectivities obtained from the network in (top). The size of the super-nodes is proportional to the number of nodes contain in the super-node. The skeleton networks cannot be simplified further as this would introduce multi-links.
In general, the connectivity of the skeleton network obtained from the tree-contraction is not unique (Fig. 1b) as it depends on the particular order in which the contraction is carried out. To decide which of the possible simplified networks we should consider, we use the search information (\(H\))1,2,19 which measures the information needed to route a signal between a source and destination nodes via all the shortest paths. Here we distinguish the information needed to describe the paths in a super-node (\(H_{s-node}\)) from the paths in the skeleton network (\(H_{skeleton}\)). As it is easier to navigate a network if its search information is low1, we search for the simplified network which has minimal search information, i.e. \(\min (H_{simp})\) where \(H_{simp}=H_{skeleton}+\sum _{s-node}H_{s-node}\).
Our approach to obtain the simplified network with minimal information is to assign random weights to the links of the network. The contraction is done by aggregating links in increasing order of their weights. Two nodes are aggregated if their aggregation does not introduces a multilink in the simplified network. The tree-contraction finishes when all the links are visited obtaining the skeleton network and super-nodes. Then the search information \(H_{simp}\) is evaluated. This process is repeated with different random seeds keeping track of the simplified network with minimal search information. The concept of search information was first introduced to consider the ‘hide-and-seek’ problem20 in a network, that is how much information is needed to describe a shortest path from one node to another. It is known that a shortest path is not necessarily the path with minimal information2. Our method is not restricted by the assumption that the relevant paths are the shortest paths.
In next section, we will show how the partitions of the networks affect the minimal search information, how our method avoids the constraint of looking only at the shortest paths, and how we can approximate the search information of large networks with small computational cost.
The skeleton and super-nodes both contribute to the search information of the simplified network. Figure 2 shows the search information for two real networks against the number of super-nodes. The first data set is Adjacent-Nouns network and the second data set is the Transport for London network (TfL) describing the London underground railway network. From all the real networks that we considered (Supplementary Information Table S1), we notice that the search information of the skeleton is proportional to the number of super-nodes (Fig 2a,d) compared to the total search information of the super-nodes which has large variations (Fig 2b,e). Also, depending on the network, sometimes the main contributor to the search information comes from the skeleton network, (e.g. adjacent-nouns network, Fig. 2a–c) and for other networks the main contribution is the information describing the super-nodes (Transport for London network in Fig. 2d–f).
The search information of two simplified networks. (a–c) are for the adjacent-nouns network and (d–f) are for the Transport for London (TfL) network. The columns show the search information for the skeleton, super-nodes and skeleton plus super-nodes against the number of super-nodes. Each dot in the sub-figures correspond to one of 500 simplified networks obtained by randomly selecting the contracting links. The grey squares show the minimal values. Notice that the y-axis range in (b) is several order of magnitude smaller than in the other subfigures.
It is known that the search information increases with the size of the network4. The subnetwork contained inside a super-node, by construction, is a tree and we expect that the search information of these trees also increases with the number of nodes. The search information for a tree \(H_{tree}\) tends to increase as a function of the number of nodes but it would fluctuate depending on the tree connectivity. To verify the increase of \(H_{tree}\) with the number of nodes we evaluated the average search information from a random selection of connected trees with N nodes. From numerical simulations (Fig. 3a) we observed a remarkable property, the average search information for a tree scales as \(H_{tree}\approx \alpha N^\beta \) where \(\alpha =0.721\pm 0.019\) and \(\beta =2.550 \pm 0.006\).
In a network the number of nodes contained inside the super-nodes depends on how the contraction is carried out which can create large fluctuations in the number of nodes contained in the super-nodes and hence in their search information (Fig. 2b,e). This large variability of the super-nodes search information can be illustrated with a ring network which is the simplest network with an alternative path (Fig. 3b–e). In this case there are two possible routes from any node to any other node. The tree-contraction will produce a skeleton network that is a triangle. For the ring networks it is possible to show analytically (see “Methods” section) that the minimal search information network is when nodes of the network are evenly distributed between the three super-nodes. The other extreme, evaluated numerically, is when two super-nodes only contain one node each and the rest of the nodes are included in the third super-node, that is, larger chains have larger search information.
(a) Variation of the search information with the number of nodes in the tree. The black line shows the average search information over 1000 trees and the search information is well approximated by \(H_{tree}= (0.721\pm 0.019)N^{2.550\pm 0.006}\) (the regression coefficient, \(R^2\) is 0.999). The grey area shows one standard deviation from the average. The dashed line is the search information for the ring which grows quadratically with the number of nodes as \(H_{ring}=(N-1)(N-2)\). (b) A 12 node ring network will be simplified to (c) a triangular skeleton where the super-nodes of have the connectivity of a chain. (d) The minimal search information (\(H_{simp}=24\)) is obtained when the nodes are distributed evenly between the super-nodes. (e) The maximal search information simplified network obtained numerically (\(H_{simp}=78\)).
It is known that the shortest-path is not necessarily the path with minimal search information and also it is expected that a minimal information path would tend to avoid network hubs1. Our method extends these observations to the general description of the network. The condition of searching for the simplified network with minimal search information produces a simplified network where super-nodes with large number of nodes tend to be avoided and the hubs of the skeleton network are now the well connected super-nodes as they are important to the path diversity. As an example, the TfL network (Fig. 4a) when simplified using the condition of maximal search information produces an skeleton network with 23 super-nodes (Fig. 4b) and the largest super-node contains 98 nodes (Fig. 4c) compared with the minimal search information which produces a smaller skeleton of 15 super-nodes (Fig. 4d) and the largest super-node contains 41 nodes (Fig. 4e). The minimal search information is used to split the network into groups (super-nodes), where there is only one path between any members of a group and different paths for members of different groups. In Fig. 4d the red, green and blue nodes are the three largest super-nodes in the skeleton network. Figure 4f shows the original network with these three super-nodes expanded to their original red, green and blue tree subgraphs.
In previous research, the search information is calculated assuming that a ‘traveller’ follows one of the possible shortest path from the start of the traveller’s walk to its destination. In here we are interested in the existence of alternative paths which not necessarily are the shortest, for example in Fig. 4f, a traveller has different options if she wants to go from any red station to any blue station, she can take a red-green-blue line or red-blue line route.
(a) The transport for London network contracted into two skeleton networks one (b) with maximal search information and the other (d) with minimal search information. The largest super-nodes of these networks are very different. For the maximal search information (c) the largest super-node contains 98 nodes and it is linked with 23 other super-nodes. For the minimal search information (e) the largest super-node contains 41 nodes and it is linked with 15 other super-nodes. The three largest hubs marked with a thick black stroke in (d) correspond to the set of nodes and links (thick lines) in the original network shown in (f).
The minimal search information of the simplified network depends on the structure of the network. For a fully connected network the tree-contraction would not simplify the network and the search information for the original and simplified network are the same. If the original network has large chains of nodes in its structure, as these subgraphs are aggregated via the tree-contraction, the simplified network would have a small search information. Figure 5a compares the ratio between the minimal search information against the search information of the network (\(H_{simp}/H_o\)) and the normalised number of nodes (\(N_{skeleton}/N_o\)) for many real networks. Networks like the Bison network tend to be almost fully connected and the simplified network and original network have very similar minimal search information. The other extreme is the Transport for London (TfL) network, which contains long chains in its structure. Again, as in the case of the search information for the simplified networks, we observe a scaling behaviour for the normalised search information of the simplified network (Fig. 5a) and the skeleton network (Fig. 5b). However, there is no obvious scaling for the trees (Fig. 5c). The normalised search information of the original networks scales as \(H_{simp}/H_o = (0.983\pm 0.059)(N_{skeleton}/N_o)^{2.97\pm 0.027}\) relative to the simplified network (Fig. 5a) and as \(H_{skeleton}/H_o = (0.988\pm 0.004)(N_{skeleton}/N_o)^{2.355\pm 0.021}\) relative to the skeleton of the simplified networks (Fig. 5b). This scaling law allow us to evaluate the search information of a large network via its skeleton network.
(a) Normalised the search information of the simplified network against the number of nodes in the skeleton network for several real networks. The data is well adjusted with the black dashed curve \(H_{simp}/H_o = (0.983\pm 0.059)(N_{skeleton}/N_o)^{2.297\pm 0.027}\) (the regression coefficient, \(R^2\) is 0.997), where \(N_{skeleton}\) and \(N_o\) are the size of the skeleton network and the original network. \(H_o\) represents the search information of the original network. The normalised search information \(H_{simp}\) was separated into (b) \(H_{skeleton}\) the search information of the skeleton network and (c) \(H_{tree}\) the search information of all the super-nodes against the number of nodes in the skeleton network. The data in (b) is well adjusted with the \(H_{skeleton}/H_o = (0.988\pm 0.004)(N_{skeleton}/No)^{2.355\pm 0.021}\) (the regression coefficient, \(R^2\) is 0.998).
The evaluation of the search information can be computationally slow due to the evaluation of all the shortest paths (Dijkstra’s algorithm). For large networks this process becomes slow and even slower if we need to search for a simplified network with the minimal search information. Our previous results provides a method to estimate the search information via the scaling found previously. For example, it is 50 times faster to obtain an approximation to the search information of the Rome-road network which has over 3353 nodes and 4831 links from its skeleton network than evaluate it directly. However in this approximation the skeleton was obtained by selecting at random the links in the tree-contraction and we cannot guarantee if the structure of the simplified network is similar to the structure of the simplified network with minimal search information. To overcome this shortcoming the contraction-tree process was modified as follows.
To each link \(l_{ab}\) connecting node a and b, we assign the weight \(W_{l_{ab}}=k_a+k_b\), where \(k_a\) and \(k_b\) are the degree of the nodes. The tree-contraction is done by contracting the links in increasing order of their weight. This strategy reduces the search information of the simplified network as it tends to aggregate chains first. Next we consider three possible ways to approximate the search information of the original network. From the simplified network, consider the search information obtained from the skeleton network and the super-nodes, consider only the search information of the skeleton network and finally consider the search information obtained from an “average” tree that has the same number of nodes as the skeleton network. Figure 6 shows the relative error when approximating the minimal search information of a network via the simplified network. The best approximation is obtained when using the search information of the skeleton network.
Relative error \((\hat{H}-H_o)/H_o\) of the search information \(H_o\) when is approximated from one of the scalings \(\hat{H}\) described in the main text. The best approximation is obtained using only the skeleton network of the simplified network (solid line) followed by the approximation when the skeleton is considered a tree (dotted line) and the worst approximation is for the combined skeleton and super-nodes (dashed line).
The structure of a network can be studied by partitioning it into communities. Loosely speaking a community is a set of nodes which have higher connectivity to nodes within their community than nodes outside this set. It is expected that these communities reflect properties of the network, e.g. friendships in social networks. Since in this paper we are interested in the existence of alternative paths between different parts of the network, we used a different approach to partitioning a network. Our approach is to aggregate the nodes that do not contribute to alternative paths into a group (super-node) reducing the network to a network of super-nodes (skeleton network). To decide which nodes should belong to a group we used the search information to find the paths between nodes which are described with minimal information.
We envisage that the description of a network using our method can have applications when describing alternative paths in a communication network. The network structure inside a super-node is of a tree and the routing decision inside a tree is unique and not difficult to compute, there is only one route between two nodes in the super-node. The path diversity is captured via the skeleton network where routing decisions are made. This path diversity can be used to design maps of networks that present information in a simpler and more usable way18,21.
By searching for a simplified network via the minimal search information we obtained a partition where there is a balance between the information describing the super-nodes and the information describing the skeleton network. Remarkably, from all the networks studied here, it seems that there is a scaling of the search information relating the original network and the minimal search information of the skeleton of the simplified network. Even more, it seems that for some networks, this scaling can be obtained by approximating the search information of the skeleton network via the search information of an “average” tree.
For large networks the simplification of a network via the minimal search information becomes computationally expensive due to the evaluation of all the shortest-paths for all pair of nodes. The scaling we observed here allows us to approximate the minimal search information for large networks from the smaller skeleton network, where, the skeleton network is obtained by doing only one tree-contraction. This tree-contraction is biased, contracting first the links where the degree of its end nodes is relatively small. This allow us to evaluate the search information of large networks with a small computational effort.
The work presented here can be extended by instead of considering the contraction of the links based on a random decision or in the degree of the nodes at the end of the link, the contraction can be based in other relevant property, for example distance or travelling time in a transport network.
Rosvall et al.1,2,19 introduced the Search Information \(H\) to judge whether a network is difficult to navigate. This information measures the amount of information needed to route a signal from a source node to a destination node via the shortest paths. This assumes that traffic flow on a network is closely related to the shortest path2. Search Information is employed in various areas such as social networks, biological networks, computer networks etc to quantify network complexity. Let \(\ell (s,d)\) be a set of linked nodes describing the shortest path from source s and ending at destination d. The probability that this path is followed by a random walker who avoids exactly reversing their path is given by
where j denotes the nodes in the shortest path \(\ell (s,d)\) excluding the source s and destination d nodes and \(k_j\) is the degree of the node j. In Eq. (1), the probability of choosing the correct link at the starting node s with degree \(k_s\) has probability \(1/k_i\) (as there are \(k_s\) possible links to choose from). For any other node in the shortest path, with the exception of the destination node, the probability of choosing the correct link when in node j is \(p_{j}=1/(k_j-1)\) as at it is assumed that the random walker does not retrace to the last node visited. As there can be many shortest paths between the source and destination pair, the probability to locate node d using a shortest path is \(P(s\rightarrow d)=\sum _{\{\ell (s,d)\}}P(\ell (s,d))\), where the sum is over all possible shortest paths \(\ell (s,d)\) from s to d. The search information from s to d is defined as1,2,19
This information would be small if the path contains nodes of low degree or if there are many shortest paths between the source and destination nodes. The search information of the network is \(H_{network}=\sum _{s}\sum _{d\ne s}H(s\rightarrow d)\), where the sum is over all source destination pairs.
We consider that a simplified network consists of the skeleton network and its super-nodes. For a ring network the tree-contraction will always produce a simplified network where the skeleton network is a triangle which connects three super-nodes (Fig.3b,c). The connectivity of the nodes forming a super-node is a chain or a single node. The search information of the simplified network is \(H_{simp}=H_{skeleton}+H_{chain1}+H_{chain2}+H_{chain3}\). The search information of the skeleton depends only on the source node which has degree 2, so \(H_{skeleton} = -6\log _2(1/2)=6\), where the factor 6 is because each node can reach two of its neighbours and there are three nodes. The search information for a chain of n nodes is
where we used that the chain information of the two end nodes is zero and the search information for the other \(n-2\) nodes is \(n-1\). The total search information for the ring network is \(H_{ring} = 6+(a-2)(a-1) + (b-2)(b-1)+(c-2)(c-1)\), where the value of 6 is the search information of the skeleton network, the other terms are the search information of the three chains (Eq. (3)), where a, b, and c are the number of nodes contained in the three different chains. If N is the total number of nodes in the network then \(N=a+b+c\). To find the simplified network with minimal information we write \(H_{ring}(a,b)=6+(a-2)(a-1)+(b-2)(b-1)+(N-a-b-2)(N-a-b-1)\) and use the condition \((\partial /\partial a + \partial /\partial b)H_{ring}(a,b)=0\). This last expression defines the minimal search information as function of a and b which defines the surface \(6a+6b-4N=0\) or \(a=2N/3-b\). Using this value of a in \(N=a+b+c\) gives \(c = N/3\) and using the value of a in \(H_{ring}\) gives the search information as a function of only b which we expressed as \(H_{ring}(b)\). Finally the overall minimal information is defined by the derivative \(H'_{ring}(b)=0\) which gives \(b=N/3\) and \(a=N/3\), that is the minimal search information for the simplified ring network is when the super-nodes contain N/3 nodes. If N is divisible by 3 then the minimal search information is \(H_{ring}=N^2/3-3N+12\). If N is not divisible by 3 then nodes are divided as even as possible between the three super-nodes.
Large networks can be difficult to understand therefore there are different techniques to simplify them leaving behind only the relevant structure. An example is the partition of a network into several clusters, in the clusters the nodes have many connections while within cluster there are few connections. There are many other methods to decompose a network into clusters however they do not conserve the cyclomatic-number (\(C=L-N+P\) where N is the number of nodes, L the number of links and P the number of connected components). The tree-contraction conserves the cyclomatic number, that is the first Betti number of the graph. For comparison we used the Louvian method22 (Louvian), Fast Greedy method23 (FG), Information Map method3 (IM), Walk Trap method24 (WT) and Betweenness Centrality method25 (BC) and evaluate the cyclomatic number of the network of clusters, which would be the equivalent to our skeleton network. The tree-contraction method maintains all the path diversity of the original network however other clustering methods prune edges and as a consequence the cyclomatic number of the original network and the network of clusters is different. For an example see Table S2 in the supplementary information.
Search information has been used to characterise how difficult is to navigate a city. To take into account that cities have different sizes Rosvall et al. used the network average search information1
They noticed that modern cities like Manhattan are easier to navigate than older cities like Ume\(\mathring{a}\), i.e. \(\hat{H}(\text{Manhattan})<\hat{H}(\text{Ume}\mathring{a})\). To decide if a city is difficult to navigate or not, Rosvall et al. compared the average search information of the city against its random counterpart, where the random counterpart has the same degree distribution of the original network but not the geometrical constraints. This comparison indicates how easy is to find a destination in a networks. Rosvall et al. found out that many cities are more difficult to navigate that their random counterpart, i.e. \(\hat{H}>\hat{H}_R\). We extend their results and consider not only cities but many other real networks and investigate if the difficulty of navigating a real network is also captured in the skeleton networks. In this case we evaluate the skeleton network and its random counterpart. Figure 7 shows that for almost all networks and their skeletons, as the ratios are bound in the unit square. Hence the skeleton and its randomised version also captures that real networks are more difficult to navigate that their random counterparts.
The ratio of the average search information of the original network \(H_{ave_O}\) and its random counterpart \(H_{ave_R}\) against the ratio of the average search information of the skeleton network with the minimal search information obtained from the original network \(H_{ave_{skeleton}}\) and its random counterpart \(H_{ave_{Rskeleton}}\). All the random counterparts are strictly randomized following two rules: conserve the same degree distribution with the original network and ensure the connectivity of itself.
The second application is to approximate the search information for large networks. For large networks the evaluation of their search information is challenging as it requires the evaluation of all shortest-paths, including degeneracies, for all source-destination pairs which, in general, is an expensive computational process. As the search information scales with the size of the network we use the tree-contraction to search for a skeleton network with a small number of nodes and then approximate the search information from the scaling
or using
Figure 8a shows the search information for thirteen large networks which follow the scaling behaviour noticed in Fig. 5b indicating that Eq. (6) can be use to approximate the search information of the original network. Figure 8b compares the relative error of the search information and its approximation as a function of the ratio \(N_{sk}/N_o\). The approximation is good for large values of \(N_{sk}/N_o\) but the error increases for small values of \(N_{sk}/N_o\). The ratio \(N_{sk}/N_o\) is small if the number of nodes in the skeleton network is smaller that the number of nodes in the original network. This happens when the original network is more tree like, that is when the super-nodes contain large sized trees. In this case the approximation based on the scaling Eq. (6) will be inaccurate. Figure 8a shows the ratio of the computational time between evaluating the search information for the original and the skeleton network against the the ratio \(N_{sk}/N_o\). Figure 8c shows that the computational time can be reduced by up to two orders of magnitude. As a rule of thumb, our method gives a reasonable approximation if \(N_{sk}/N_o\ge 0.3\)
(a) Thirteen large networks (red dots) from different fields whcih fit the curve shown in Fig. 5b. (b) Relative error of the approximation, and (c) shows the ratio of the computational time of evaluating the search information \(T_O\) relative to the time to evaluate the skeleton network \(T_{skeleton}\) against \(N_o/N_{skeleton}\). The green dots represent small networks which has less than 1000 nodes (shown in Supplementary Information Table S1) and red dots represent large networks which has more than 4000 nodes (shown in Supplementary Information Table S3).
