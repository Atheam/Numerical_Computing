A divide-and-conquer algorithm for quantum state preparation
Advantages in several fields of research and industry are expected with the rise of quantum computers. However, the computational cost to load classical data in quantum computers can impose restrictions on possible quantum speedups. Known algorithms to create arbitrary quantum states require quantum circuits with depth O(N) to load an N-dimensional vector. Here, we show that it is possible to load an N-dimensional vector with exponential time advantage using a quantum circuit with polylogarithmic depth and entangled information in ancillary qubits. Results show that we can efficiently load data in quantum devices using a divide-and-conquer strategy to exchange computational time for space. We demonstrate a proof of concept on a real quantum device and present two applications for quantum machine learning. We expect that this new loading strategy allows the quantum speedup of tasks that require to load a significant volume of information to quantum devices.
The development of quantum computers can dramatically reduce the time to solve certain computational tasks1. However, in practical applications, the cost to load the classical information in a quantum device can dominate the asymptotic computational cost of the quantum algorithm2,3. Loading information into a device is a common task in computer science applications. For instance, deep neural networks4 learning algorithms run in specialized hardware5, and the computational cost to transfer the information needs to be considered in the total computational cost as data loading can dominate the training time on large-scale systems6. In classical devices, we can use the loaded information several times while we do not erase it. The situation is not the same in quantum devices because of the no-cloning theorem7, noisy quantum operations8, and the decoherence of quantum information9. The no-cloning theorem shows that it is not possible to perform a copy of an arbitrary quantum state. When a quantum operation is applied, its input is transformed or is destroyed (collapsed). Even if we represent the information in a basis state that we can copy, the noisy operations and decoherence will corrupt the stored state, and it will be necessary to reload the information from the classical to the quantum device.
Loading an input vector \(\vec {x}=(x_0, \ldots , x_{N-1})\) to the amplitudes of a quantum system corresponds to create the state with \(\log _2(N)\) quantum bits described in Eq. (1).
Circuits to load an N-dimensional classical unit vector in quantum devices use \(n = \log _2(N)\) qubits and have an exponential depth in relation to the number of qubits (or polynomial in the data size)10,11,12,13.
Here we propose a new format of data encoding. Namely, we load an N-dimensional vector in probability amplitudes of computational basis state with entangled information in ancillary qubits as
where \(\vert {\psi _j}\rangle \) are unit vectors. We propose an algorithm to load an N-dimensional vector in a quantum state as shown in Eq. (2) using a circuit with \(O(\log _2^2(N))\) depth and O(N) qubits. The devised method is based on quantum forking13,14 and uses a divide-and-conquer strategy15. The circuit depth is decreased at the cost of increasing the circuit width and creating entanglement between data register qubits and an ancillary system. Thus when the data register is considered alone (i.e. by tracing out the ancilla qubits), the resulting state is mixed and not equal to the pure state shown in Eq. (1). However, it is important to note that in Eq. (2) the classical data is still encoded as probability amplitudes of an orthonormal basis set. Useful applications can be constructed based on this, and we provide two example applications in machine learning and statistical analysis.
The divide-and-conquer paradigm is used in efficient algorithms for sorting16, computing the discrete Fourier transform17, and others15. The main idea is to divide a problem into subproblems of the same class and combine the solutions of the subproblems to obtain the solution of the original problem. The circuit based divide-and-conquer state preparation algorithm has computational cost O(N) and the total complexity time is \(O_c(N) + O_q(\log _2^2(N))\), where \(O_c(N)\) is classical pre-computation time to create the quantum circuit that will load the information in the quantum device and \(O_q(\log _2^2(N))\) is the depth of the quantum circuit. With the supposition that we will load the input vector \(m\gg N\) times, the amortized computational time to load the real vector is \(O_q(\log _2^2(N))\). The modified version of the loading problem allows an exponential advantage in the depth of the quantum circuit using O(N) qubits.
The remainder of this paper is organized into 3 sections. “Transformation of quantum states” section reviews one of the standard methods for loading information in a quantum device using controlled rotations10, which we set out to modify to reduce its quantum circuit depth exponentially. “Divide-and-conquer loading data” section shows the main result, a quantum circuit with depth \(O(\log _2^2(N))\), and O(N) qubits to load an N-dimensional vector in a quantum state with entangled information in the ancillary qubits. “Discussion” section presents the conclusion and possible future works.
One of the major open problems for practical applications of quantum computing is to develop an efficient means to encode classical data in a quantum state3. Most quantum algorithms do not present advantages in loading data2. The method proposed in this work fills this gap by proposing a new quantum state preparation paradigm, which can complement or enhance the known methods, such as qubit encoding and amplitude encoding. Our approach was based on the Möttönen et al. algorithm10 and a divide-and-conquer approach using controlled swap gates and ancilla qubits. With this modification, we obtain an exponential quantum speedup in time to load a N-dimensional real vector in the amplitude of a quantum state with a quantum circuit of depth \(O(\log _2^2(N))\) and space O(N). The exponential speedup to load data in quantum devices has a potential impact on speeding up the solution of problems in quantum machine learning and other quantum algorithms that need to load data from classical devices.
The speedup is achieved at the cost of using ancilla qubits that are entangled to the data register qubits. However, we showed that some interesting problems such as quantum supervised machine learning and statistical analysis can be performed with the input quantum state given by our method. The tradeoff between time and space complexities that our method provides is favorable when increasing the circuit width is easier than increasing the circuit depth, which is a likely scenario to occur during the development of near-term quantum devices.
We demonstrated the proof-of-principle using the IBM quantum cloud platform to verify the validity and the feasibility of our method. Furthermore, the numerical experiments showed that the new encoding method offers advantages, reducing complexity and computational resources when applied in conjunction with existing algorithms. Our perspective is that these advantages will extend to other cases.
This work leaves some open questions. What are other problems that can be solved with a divide-and-conquer quantum strategy? What are the implications to efficiently load a quantum vector with entangled information in the ancillary qubits for machine learning? And how to combine sequential with parallel strategies to create a robust algorithm with respect to input size? Also, finding an efficient means to uncompute the ancillary information remains as an interesting future work that will broaden the applicability of our method.
We performed the proof of concept experiment with a publicly available IBM quantum device consisting of five superconducting qubits, named as ibmq_rome. The quantum circuit used in this experiment is depicted in Fig. 5b. The circuit in Fig. 5b is compiled to the physical qubit layout of ibmq_rome and the resulting circuit is depicted in Fig. 7 that is executed 1024 times to obtain the data used to generate Fig. 5a. We used the quantum information science kit (qiskit). Python implementation of gen_angles and Algorithm 3 are used to generate the quantum circuit in Figs. 4 and 5b.
The transpiled circuit of the divide-and-conquer state preparation circuit in Fig. 5b in accordance with the physical qubit layout of the ibmq_rome device. The gates \(U_1\), \(U_2\), and \(U_3\) are physical single-qubit gates of IBM Quantum Experience that take in one, two, and three parameters, respectively. The measurement outcomes are stored in classical registers denoted by c[0] and c[1].
The depth of the quantum circuits for state preparations described in Table 1 is obtained using a python implementation of Algorithm 3, the qiskit implementation of11 and a non-optimized version of the algorithm10 available at the GitHub repository. For each input size we generated a random vector used for all methods. In these first two set of experiments we used qiskit version 0.14.1 and python version 3.7.7.
In “Hierarchical quantum classifier” section, simulations of the hybrid classification algorithms were performed using Xanadu’s Pennylane26 default qubit plugin state simulator. We used 2/10 of the datasets as a test set, 2/10 as a validation set, and the remaining as a training set. As preparation for qubit encoding, each data vector element of all datasets was re-scaled within the range of \([0, \pi ]\). Also, for amplitude encoding and divide-and-conquer encoding, the data vectors were normalized. Our simulation employs the Adaptative Moment Estimation (Adam) for the optimization process27 with a learning rate of 0.1 and a batch size of 1/10 of the training set size. Training stops when validation set accuracy does not increase for 30 consecutive tests or 200 iterations is reached.
