Unspoken Assumptions in Multi-layer Modularity maximization
A principled approach to recover communities in social networks is to find a clustering of the network nodes into modules (i.e groups of nodes) for which the modularity over the network is maximal. This guarantees partitioning the network nodes into sparsely connected groups of densely connected nodes. A popular extension of modularity has been proposed in the literature so it applies to multi-layer networks, that is, networks that model different types/aspects of interactions among a set of actors. In this extension, a new parameter, the coupling strength ω, has been introduced to couple different copies (i.e nodes) of the same actor with specific weights across different layers. This allows two nodes that refer to the same actor to reward the modularity score with an amount proportional to ω when they appear in the same community. While this extension seems to provide an effective tool to detect communities in multi-layer networks, it is not always clear what kind of communities maximising the generalised modularity can identify in multi-layer networks and whether these communities are inclusive to all possible community structures possible to exist in multi-layer networks. In addition, it has not been thoroughly investigated yet how to interpret ω in real-world scenarios, and whether a proper tuning of ω, if exists, is enough to guarantee an accurate recoverability for different types of multi-layer community structures. In this article, we report the different ways used in the literature to tune ω. We analyse different community structures that can be recovered by maximising the generalised modularity in relation to ω. We propose different models for multi-layer communities in multiplex and time-dependent networks and test if they are recoverable by modularity-maximization community detection methods under any assignment of ω. Our main finding is that only few simple models of multi-layer communities in multiplex and time-dependent networks are recoverable by modularity maximisation methods while more complex models are not accurately recoverable under any assignment of ω.
Community detection is one of the core tasks in the analysis of complex networks. It involves partitioning the network into groups of nodes, also known as communities, partitions, cohesive groups or clusters. The importance of this task comes from its ability to break large networks into smaller building blocks so it becomes easier to understand the structure of the network and the role played by each node. Applications of community detection algorithms are ubiquitous, including social media group detection1, thematic community detection2, second-order flow analysis in human mobility3, and topic detection in information networks4. A community detection solution is usually represented as a clustering \({\mathcal{C}}\) where \({\mathcal{C}}\) = \(\{{C}_{1},{C}_{2},\ldots ,{C}_{k}\}\), and C1, C2, Ck are disjoint or non-disjoint groups of nodes.
Although there is no agreed-upon definition for communities in networks, it is widely accepted to consider a community, loosely speaking, the group of nodes that are more densely connected with each other than with the rest of the network5. This definition is aligned with the quality function modularity6,7, which is a function f (\({\mathcal{C}}\)) that produces values in the range [−1, 1] and for a given clustering \({\mathcal{C}}\) over a network, it measures the extent to which the network nodes are more densely connected within the communities \(\{{C}_{1},{C}_{2},\ldots ,{C}_{k}\}\) ∈ \({\mathcal{C}}\) than across these communities. While modularity was firstly proposed as a quality measure to evaluate the accuracy of community detection methods at the time6, it gave birth to a new class of community detection methods that interpreted the community detection problem into finding a clustering with the maximal modularity over the network.
In response to the advances on complex network analysis, the multi-layer network model has been proposed as an effective tool to consider different types and/or different time-windows of interactions in a given system8,9. The intuition behind such generalisation is that interactions among a set of actors do not happen in isolation. Instead, they inherit certain dependencies among each other such that one might cause the other one, or one can be used as predictor for the other one. For example, if two people are friends on Facebook, the probability of having those two connected via other means of communication (i.e., Twitter, Whatsapp, etc) is much higher than if they were not connected via any communication mean. Hence, studying these interactions separately without accounting for any dependencies among them might yield into misleading or incomplete findings.
Two special applications of the multi-layer model that received a great deal of attention in the literature are multiplex networks – that is, networks that model different types of relationships among a set of actors10, and time-dependent (or temporal) networks – that is, networks in which the interactions among actors change over time11. When the multi-layer model is used to model the former, layers correspond to different types of relationships and are thus categorical, while in the latter, layers represent different time-points of a relationship, and thus are ordinal. Multiplex networks have been used in a variety of different applications including, to mention a few, ecological networks (which model different types of interactions among species)12, and social networks (where different layers can be used to model different types of interactions provided by a social media platform or different relationships across different social media platforms)13. Temporal networks have been used to model brain network dynamics (where layers capture the interaction among different areas in the brain over time)14, and citation networks (where layers refer to different time points in which the citation happened)15. Figure 1 shows a typical layered representation of a multiplex network where each of the layers corresponds to a different type of interaction, and nodes in different layers can be associated to the same actor (the same person for example). The same figure can also be seen as a time-dependent network if layers were to refer to time-windows of an interaction instead. Here, we adopt the term actor from the field of social network analysis, where multiplex networks and time-dependent networks have been first applied, and the term layer from recent generalisations of these models8. We also refer to networks that model a single relationship among a set of actors as single-layer networks.
A schematic network with two types of interactions represented by Layer 1 and Layer 2 among 15 actors. The two nodes existing in both layers and representing the same actor (e.g. the same person) are linked by a dotted line.
In spite of the plethora of methods developed for detecting communities in multi-layer networks, there is very little work on proposing a definition for multi-layer communities like community definitions used with single-layer networks. For example, it is common to accept the conceptualisation of communities based on the relative frequency of edges within and across the communities in single-layer networks, but no extension of this definition is provided in the literature for multi-layer networks. This can be due to two reasons: First, multi-layer community discovery as a tool emerged as a response to the generalisation of graphs into multi-layer graphs, and not to the generalisation of communities into multi-layer communities. Second, most multi-layer community detection methods are mathematical extensions of single-layer community discovery methods, which made it possible to provide such methods without having to investigate a precise extension of their original conceptualisations. From a structural perspective, recent work16 argues that there are two primary differences between a single-layer community and a multi-layer one. First, a multi-layer community can expand over multiple layers. Second, edges of a multi-layer community in one layer might depend on the connectivity patterns in another layer. For example, in a multiplex network that models different Twitter interactions among a set of users (i.e., following and retweeting each represented as a layer in a 2-layer multiplex network), it might be the case that the re-tweet edges among a set of actors are largely dependent on whether these actors follow each other or not, which might explain the existence of multi-layer communities that expand over the two layers.
Undoubtedly, the generalisation proposed by the multi-layer framework has introduced new challenges to the community detection problem. While some researchers worked on that by tailoring new community detection methods for multi-layer networks17, there has been more tendency to extend some of the already existent methods used with single-layer networks like collapsing the multiple layers into a single-layer network and then use any of the single-layer community detection methods18, extended label propagation19 and extended clique percolation20 just to mention few.
A popular extension from single-layer to multi-layer is the extension of the quality function modularity into the generalised modularity21. In that extension, the authors introduce a new parameter, the coupling strength ω, to the modularity function. The new proposed parameter, ω, assumes that nodes of the same actor in different layers are coupled via coupling edges and these coupling edges are weighted with an amount equals to ω. With that extension, a modularity maximisation method does not only maximise the within-community intra-layer edges and minimise the cross-community intra-layer edges, but also maximises the sum of coupling edges weights, i.e., nodes that belong to the same actor, within a community given ω. Indeed, with ω being the only multi-layer ingredient in the generalised modularity formula, there has been few tries in the literature to tune ω such that it reflects some of the inter-layer information across different layers (i.e., closeness between layers, common neighbour across layers, etc.). It is not clear, however, how these different interpretations affect multi-layer community detection using modularity maximisation and whether the modularity function responds to these interpretations by providing clusterings that support the intuition behind them. For example, the intuition behind tuning ω such that it reflects the percentage of common neighbours among nodes in different layers is that it makes more sense for multi-layer communities to group nodes of the same actor in one community only if they have similar neighbourhoods across the layers22. The question is whether modularity responds to that tuning by clustering the network nodes into communities that respect that intuition.
We claim that methods that maximise the generalised modularity in multi-layer networks inherited their popularity and success from the modularity maximisation methods applied to single-layer networks before, yet the communities identified by these methods are not thoughtfully investigated enough. For example, Fig. 2 illustrates multi-layer communities that can exist in multi-layer networks as we will discuss later. We ask the question whether these different models of multi-layer communities are recoverable by maximising the generalised modularity under any assignment of ω.
Different models of multi-layer communities, illustrated using colors referring to the actors’ community memberships across different layers. NS in (b,c) means that the community membership of the actors in these layers is not specified in this illustration as it does not expand over multiple layers. (a) Pillar communities. (b) Semi-pillar layer-adjacent communities. (c) Semi-pillar non-layer adjacent communities. (d) Partially overlapping communities. (e) Hierarchical communities.
The goal of this article is to analyse the assumptions behind the generalised modularity and the effect of that on the possible community structures that can be recovered in multi-layer networks as a result of maximising that quality function. To achieve that, we first propose different models for multi-layer communities in multiplex and time-dependent networks by hypothesising some real-world scenarios. We then analyse different community structures that can be recovered by maximising the generalised modularity in relation to ω. We conclude from our experiments that only few simple models of the multi-layer communities we propose are recoverable by modularity maximisation methods while more complex models are not accurately recoverable under any tuning for ω.
The novelty of this article comes in (1) the community models it proposes to model different community structures which can exist in multi-layer networks, and (2) the discussion about the limitations of the highly popular and extensively referenced methods based on modularity maximisation for recovering communities in multi-layer networks. Unless mentioned otherwise, we will refer to the generalised modularity as modularity, and to the modularity applicable only on single-layer networks as single-layer modularity.
Our article is structured as follows. We first start by proposing different models for multi-layer communities possible to exist in multiplex and time-dependent networks in Section 1. Since understanding the generalised modularity requires a very good understanding of single-layer modularity, we first recall the definition of modularity in single-layer networks (Section 2). This is followed by a description of generalised modularity in Section 3. We study the effect of ω on the types of multi-layer communities that can be recovered by maximising modularity in Section 4. We report the results of our experiments on the recoverability of our proposed community models using modularity maximisation in Section 5. We discuss our findings in Section 6, and report the methods used for our experiments in Section 7.
Here we report the results of testing the accuracy of modularity maximisation methods (i.e., ability to recover ground truth communities) for the different multi-layer community models proposed in Section 1. With each model, the accuracy is calculated as a function of the coupling strength (\(\omega \)) and the coupling style (adjacent or complete). To investigate whether coupling edges are treated as identity edges or as edges that connect nodes of the same community, we experimentally include a third coupling style, we refer to it as community-based, which couples nodes across layers only if they have the same community membership (given that the ground truth is known upfront and the generative model we use for our synthetic networks provides a node-level ground truth together with the generated networks). The following summarises our findings:
A general observation from our experiments (Fig. 9) is that the highest accuracy of community discovery with more complex community models than the pillar model is achieved only when the coupling style is community-based (only nodes of the same community are coupled). This suggests that multi-layer modularity maximisation treats inter-layer coupling edges as community edges and when coupling-edges are used as identity-edges (complete or adjacent), the accuracy of modularity maximisation seems to drop down with more complex community models than the pillar one.
Accuracy using omega-index and modularity scores of community detection using multi-layer modularity maximisation as a function of the coupling type and the value of the coupling strength.
While the accuracy scores fluctuate as a function of both the coupling style and the value of the coupling strength (Fig. 9), modularity scores seem to be stable. This suggests that less accurate clusterings are not necessarily less modular according to the generalised modularity.
As shown in Fig. 9a, a very small positive assignment of \(\omega \) (\(\omega ={10}^{-13}\)) set uniformly across layers guarantees a very high accuracy for recovering pillar communities independently of the coupling style used to couple nodes across layers.
As the community model gets more complex compared to the pillar model, modularity maximisation seems to fail at accurately recovering the ground truth communities when the coupling style is the adjacent or the complete one independently of the value given to the coupling strength \(\omega \) (Fig. 9b–d). However, if coupling edges are placed only among nodes belonging to the same multi-layer community, multi-layer modularity maximisation seems to be able to recover the ground truth communities and shows a stable behaviour with respect to the value given to \(\omega \).
With the hierarchical community model (M5), we study the structure of the detected communities as a function of \(\omega \), instead of reporting their accuracy. Figure 10b–d illustrate the structure of the detected multi-layer communities using modularity maximisation when the implanted communities in each layer reflect the level of hierarchy illustrated in Fig. 10a. We show only the results when the coupling type is complete since the other types do not significantly change the output in this model. We can see that using high values of \(\omega \) forces the community membership of the highest level in the hierarchy across the layers. Nonetheless, using lower values of \(\omega \) does not force the community membership of the highest level of the hierarchy across all the nodes across the layers but only part of them such that the single-layer optimal groupings are guaranteed.
A coloured representation of the community assignment resulted by maximising the generalised modularity as a function of \(\omega \) in a 3-layer 400-actor multiplex network. The x axes represent the actor id, while the y axes represent the layer, and different colours represent different community assignments.
In this article, we investigated multi-layer modularity maximisation, an extensively used tool for community discovery in multi-layer networks. We infer unspoken assumptions that condition the ability of multi-layer modularity maximisation to recover ground truth communities by investigating the role of \(\omega \) and coupling edges introduced in multi-layer modularity. Our main findings can be summarised as follows: (1) the high accuracy of multi-layer modularity maximisation is conditioned by a coupling style that couples only nodes of the same community together, (2) when a proper coupling is chosen in a multi-layer network generated using one of the models (M1–M4),- the value of \(\omega \) assigned to the coupling edges has no impact on the accuracy of community detection using multi-layer modularity maximisation (as long as \(\omega > \mathrm{0)}\), (3) less accurate does not necessarily mean less modular according to multi-layer modularity, and (4) with hierarchical multi-layer communities, \(\omega \) controls the granularity of the detected patterns and the qualitative interpretation of the identified patterns is not always clear.
The fact that the accuracy of multi-layer modularity maximisation with more complex multi-layer community models is conditioned by coupling nodes of the same community together (rather than the same actor) sheds a light on the importance of coupling style for a successful recovery of the communities and hints to limitations in the coupling strategies available in the literature to couple nodes in multi-layer networks. While some heuristics can be developed to predict whether two nodes of an actor belong to the same community or not, and a community-based coupling can be built on top of that, a valid question can be: why should the accurate recovery of multi-layer communities be conditioned by knowing which nodes of the same actor fall in the same community, which is what the community detection method itself is supposed to infer?
The reason why networks should be analysed in a multi-layer manner is that there are dependencies among different interactions/relationships and providing any analysis by considering only one of these interactions might give misleading or incomplete findings. This means that for the formation of multi-layer communities, different dependencies among the layers might result in different structures of multi-layer communities (a very high dependency among all layers for example results in pillar communities). While this motivation is sound, the question becomes whether it is always possible to reflect these inter-dependencies in the tools used for multi-layer network analysis, especially community detection. Thinking of multi-layer modularity, the coupling strength ω (as suggested by the original authors21) is a binary variable that takes one of the two values: either 0 to refer to the non-existence of a coupling edge between two nodes of an actor, or a positive value ω > 0 to refer to the existence of that coupling edge. When the proper coupling is provided, our experiments showed that the positive value assigned to the existent couplings does not affect the accuracy of community detection. This means that this parameter with models (M1-M4) has no role more than referring to existent (ω > 0) or non-existent (ω < = 0) couplings. This adds another limitation to modularity maximisation based methods because with this limited interpretation of ω, the only multi-layer ingredient in the generalised modularity, there is no way to reflect different levels of inter-dependencies among the different layers and/or nodes of an actor and to take these inter-dependencies into account in community discovery.
As shown in our experiments, multi-layer modularity scores do not necessarily follow the same trends the accuracy of the recovered communities follow. Indeed, the modularity scores of the accurately recovered clusterings are not necessarily higher than those with lower accuracy. This raises another important question: is multi-layer modularity maximisation a valid proxy for finding complex multi-layer communities? Or is the idea of it being as such mostly inherited from the success and the popularity the single-layer implementation has had?
The qualitative interpretation of the recovered patterns in networks generated using one of the community models (M1–M4) does not change much from those identified using the single-layer modularity. If edges were created such that nodes of the same community are densely connected within the community and sparsely connected with the rest of the network, the patterns identified by maximising multi-layer modularity satisfy that condition. With the hierarchical community model, however, it is not clear how to interpret the identified patterns for values of ω other than 0 (the lowest granularity of the hierarchy). The question is whether using multi-layer community detection in this case provides any additional information the single-layer community detection on each layer separately cannot provide and we tend to believe that multi-layer community detection here using multi-layer modularity maximisation can give misleading results from a qualitative perspective.
For recovering the multi-layer communities that maximise multi-layer modularity, we chose Generalised Louvain method33 as a representative method for the class of modularity maximisation community detection methods. The choice of this method comes for both being a well-referenced method in the literature and serving as one of the best approximation methods among other modularity-maximisation methods in terms of its accuracy and performance. Since communities resulted by this method might vary from one execution to another because the order by which the nodes are scanned by this method is chosen at random, we provide the final result of community detection after 10 executions and choosing the one with the maximum modularity as an output.
For each of the community models (M1–M4) we calculate the accuracy of the resulted communities as a function of the coupling style (adjacent, complete, and community based) and the value of the coupling strength ω assigned to the coupling edges. For measuring accuracy, we chose omega-index for its sensitivity to different types of dissimilarities among clusterings and its ability to remove the by-chance agreement from the final score as we discussed in a previous study34.
As regards the generation of the multi-layer networks, we refer to the generative model in16. To the best of our knowledge, this provides the most general platform in the literature for generating synthetic multi-layer communities that takes into consideration different types of multi-layer networks. The generation of a multi-layer community using this model goes through the following three steps. First, assuming a multi-layer network of n actors and m layers and initial number of communities k to be planted in each layer, the model starts by assigning nodes in each layer randomly to k community memberships (a categorical distribution can be used for this step). At the end of this phase, nodes in each layer will be distributed over k not necessarily equal in size groups. In the second phase, nodes start to propagate their community memberships across layers with a probability equal to the dependency between the layers. The type of multi-layer network we want to generate, i.e., multiplex or time-dependent, controls the order and the way this propagation of community labels across layers happen. At the end of this phase, community memberships that were set in the first phase might be updated based on the assumed dependency p set among layers. At the third phase, a multi-layer edge generation model can be used to create edges of the multi-layer network given the implanted community assignments resulted from the previous step. In our experiments, we generate out synthetic networks using a variant of the degree-corrected SBM benchmark that avoid the creation of self-loops and parallel edges16. We chose to fix the mixing parameter in edge generation phase in our experiments to a very small value (\(\mu \,\mathrm{=\; 0.05}\)). That is because our main goal from the experiments is not to test the ability of multi-layer modularity maximisation to recover noisy patterns, but to test the ability to recover complex multi-layer patterns.
We chose our synthetic multi-layer networks to be 4-layer networks of 1000 actors (i.e., 4000 nodes). To generate pillar communities (M1), we use the aforementioned generative model and we generate a temporal network with a very high dependency across the layers (p = 1). To generate the semi-pillar layer-adjacent communities (M2), we generate two sets of pillar partitions on two 2-layer temporal networks. We use the resulted partitions to generate a 4-layer multi-layer network where in the first two layers we plant the first set of partitions and in the last two layers we plant the second set of partitions. For (M3), we do the same except that the 4-layer multi-layer network is resulted by implanting the first set of partitions in the first and the third layer, while in the second and the fourth we plant the second set of partitions. As to partially overlapping communities, we generate multiplex networks with a moderate dependency among layers (p = 0.3). This, according to the used generative model, results in communities that are not perfectly pillar but partially overlapping.
